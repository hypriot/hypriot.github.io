<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shieldtv on Docker Pirates ARMed with explosive stuff</title>
    <link>http://blog.hypriot.com/tags/shieldtv/</link>
    <description>Recent content in Shieldtv on Docker Pirates ARMed with explosive stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Jan 2016 16:00:00 +0200</lastBuildDate>
    <atom:link href="http://blog.hypriot.com/tags/shieldtv/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How xXx makes HypriotOS a lot more attractive</title>
      <link>http://blog.hypriot.com/post/how-xxx-makes-hypriotos-a-lot-more-attractive/</link>
      <pubDate>Mon, 18 Jan 2016 16:00:00 +0200</pubDate>
      
      <guid>http://blog.hypriot.com/post/how-xxx-makes-hypriotos-a-lot-more-attractive/</guid>
      <description>&lt;p&gt;&lt;strong&gt;What does Vin Diesel and xXx have to do with HypriotOS? Well, the short version of it is: it is all about the xXx&lt;/strong&gt;.
But more on that later.&lt;/p&gt;

&lt;p&gt;It all began when Dieter aka &lt;a href=&#34;https://twitter.com/Quintus23M&#34;&gt;@Quintus23M&lt;/a&gt; started to experiment with the NVIDIA ShieldTV.
The ShieldTV is a curious little thing. Sold as a media hub for your living room it does deliver one teraflop of processing power.
On top of that it is one of the first 64-bit ARM boards that can be bought for a reasonable price.
Regular readers of our blog know that it is not in Dieter&amp;rsquo;s nature to resist the Sirens voices of such an appealing beauty for long.
Last December he started the work to get Docker running on the ShieldTV and &lt;a href=&#34;http://blog.hypriot.com/post/getting-docker-running-on-a-highend-arm-gaming-console-for-fun-and-profit/&#34;&gt;described his journey&lt;/a&gt; on our blog.
The gist of it is that it was quite an involved process of creating his own custom Debian based operating system that supported building Go and Docker for ARM64.&lt;/p&gt;

&lt;p&gt;The work of Dieter on the ShieldTV inspired our team to revisit the way we were building our beloved HypriotOS for the Raspberry Pi.
Longing to publish the way we build it for quite some time we had been ashamed to actually do it because it was such a complicated mess.
Don&amp;rsquo;t get me wrong - it worked well enough and was completely automated with our CI system and even tested, but ultimately it was difficult to understand and change.&lt;/p&gt;

&lt;p&gt;So Dieter&amp;rsquo;s work got us thinking:
What if we could restructure the build process of HypriotOS in such a way that it would be built in distinct layers that would create distinct build artifacts on their own.
What if those artifacts could be tested and published on their own, too? Only to be assembled in a final step at the end to create a fully working SD card image.
What if those distinct steps were self-contained and easy to understand?&lt;/p&gt;

&lt;p&gt;Last week we had some time at our hands and we started working on a build process that would be the answer to all those questions.
It is certainly still a little rough around the edges and needs further tweaking but it produces a working SD card image for the Raspberry Pi.
We consider it beta quality and it is not yet completely on par with our stable HypriotOS Hector image, but it already runs very well.&lt;/p&gt;

&lt;p&gt;The main repository for building HypriotOS SD card image for the Raspberry Pi can be found at GitHub in the &lt;a href=&#34;https://github.com/hypriot/image-builder-rpi&#34;&gt;Image-Builder-Rpi Repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So what happens in this repository?&lt;/p&gt;

&lt;p&gt;Basically it just assembles prepared artifacts into a working SD card image which then can be &lt;a href=&#34;https://github.com/hypriot/flash&#34;&gt;easily flashed&lt;/a&gt; onto a SD card.&lt;/p&gt;

&lt;p&gt;The artifacts that are combined here are produced elsewhere each in their own GitHub repository:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hypriot/os-rootfs&#34;&gt;a basic filesystem that is based on Debian Jessie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hypriot/rpi-kernel&#34;&gt;a Raspberry Pi compatible Linux kernel and firmware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hypriot/image-builder-raw&#34;&gt;a Raspberry Pi image file that contains the necessary partitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://packagecloud.io/Hypriot/Schatzkiste&#34;&gt;a couple of Debian packages with software like Docker, Docker-Machine and Docker-Compose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The basic idea is that all these artifacts can be build and tested with the help of Docker.
For instance if you look into the &lt;a href=&#34;https://github.com/hypriot/os-rootfs&#34;&gt;os-rootfs&lt;/a&gt; repository you will find a &lt;code&gt;Dockerfile&lt;/code&gt; in the root of the project that will allow you to create a build and test environment for the root filesystem.&lt;/p&gt;

&lt;p&gt;This makes two important things possible: Firstly it allows others to build the rootfs locally on their own computer and fix or extend the rootfs with ease.
And secondly the rootfs is build and tested on &lt;a href=&#34;https://travis-ci.org/hypriot/os-rootfs&#34;&gt;Travis CI&lt;/a&gt; everytime somebody creates - for instance - a pull request.
Combined these two points create a transparent development process with instant feedback.&lt;/p&gt;

&lt;p&gt;It turned out that this approach is generic and powerful enough to be applied - you probably already guessed it - to the NVIDIA ShieldTV, too.
By publishing the &lt;a href=&#34;https://github.com/hypriot/image-builder-nvidia-shieldtv&#34;&gt;Image-Builder-NVIDIA-ShieldTV&lt;/a&gt; repository we are making good on Dieter&amp;rsquo;s promise to publish the sources for Dieter&amp;rsquo;s journey with the ShieldTV.&lt;/p&gt;

&lt;p&gt;But hold on - that&amp;rsquo;s not all. To proof to ourselves that this process allows to easily port HypriotOS to different development boards we created &lt;a href=&#34;https://github.com/hypriot/image-builder-odroid-c1&#34;&gt;another Github repository&lt;/a&gt;.
It builds a SD card image for the very capable &lt;a href=&#34;http://www.hardkernel.com/main/products/prdt_info.php?g_code=G143703355573&#34;&gt;ODROID C1+&lt;/a&gt; development board.
Similar to the Raspberry Pi 2 the ODROID C1+ features a quad core ARMv7 CPU with 1 GB of memory. Distinct from the Raspberry Pi 2 it features a gigabit ethernet port.
A highlevel comparision of both devices can be found at &lt;a href=&#34;http://www.cnx-software.com/2015/02/02/raspberry-pi-2-odroid-c1-development-boards-comparison/&#34;&gt;CNX-Software&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this third supported board for HypriotOS we proofed to ourselves that this new build process makes it not only feasible but actually quite easy to extend the support of HypriotOS to new development boards.&lt;/p&gt;

&lt;p&gt;Overall the relation of the different repositories now looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/hypriotos-xxx/hypriotos_buildpipeline.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;All these changes also redefined for us what HypriotOS is all about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our old mission statement for HypriotOS was:&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;&amp;ldquo;HypriotOS is a minimal operating system for the Raspberry Pi 1 &amp;amp; 2 that provides an optimized environment for running Docker. It is very easy to install and use. HypriotOS prides itself for coming with very recent versions of the Linux kernel and all included software.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our new mission statement is:&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;&amp;ldquo;HypriotOS is a minimal Debian-based operating system for &lt;strong&gt;many popular IoT devices&lt;/strong&gt; that provides an optimized environment for running Docker. It is very easy to install and use. HypriotOS prides itself for coming with very recent versions of the Linux kernel and all included software.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It is just a small change but it will have big implications.&lt;/p&gt;

&lt;p&gt;One of the biggest downsides of having an ever increasing amount of IoT devices to choose from is fragmentation. Each device comes with varying support for existing operating systems.
Take Linux for instance. Even if a vendor provides Linux support for a device from the start - it is often based on an outdated Linux kernel.
This in turn often enough means that you can only use old software on top of it. Docker with OverlayFS is such an example. It can only be used with a Linux kernel greater than 3.18.
And that&amp;rsquo;s not only a problem of the small vendors, it even happens with big vendors like NVIDIA. The NVIDIA ShieldTV is provided only with a 3.10 Linux kernel while the latest stable Linux kernel is 4.4.
Not to mention that the 3.10 kernel is &lt;a href=&#34;https://www.kernel.org/category/releases.html&#34;&gt;not supported any more by the kernel maintainers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this background in mind a major goal of HypriotOS is to provide an operating system that behaves as similar as possible on &lt;strong&gt;different&lt;/strong&gt; IoT devices.
While I know that this might prove to be a difficult task - especially in regards to support for recent Linux kernels - I think it might prove to be a worthwhile effort that provides much value.&lt;/p&gt;

&lt;p&gt;Providing a beta version of HypriotOS that supports three different development boards is a first step into that direction.&lt;/p&gt;

&lt;p&gt;Being just able to flash HypriotOS on a SD card and get going in minutes is one of the basic promises of HypriotOS, so without further ado you can download it here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/hypriot/image-builder-rpi/releases&#34;&gt;HypriotOS for the Raspberry Pi&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/hypriot/image-builder-nvidia-shieldtv/releases&#34;&gt;HypriotOS for the NVIDIA ShieldTV&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/hypriot/image-builder-odroid-c1/releases&#34;&gt;HypriotOS for the ODROID C1+&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully you have a lot fun trying out what HypriotOS has to offer!&lt;br /&gt;
&lt;strong&gt;Note:&lt;/strong&gt; we changed the default username to &lt;code&gt;pirate&lt;/code&gt; (password &lt;code&gt;hypriot&lt;/code&gt;) and disabled the &lt;code&gt;root&lt;/code&gt; user for security reasons.&lt;/p&gt;

&lt;p&gt;And you might have guessed the connection between this post and xXx. Each x stands for one of our initially supported devices.
Hopefully HypriotOS develops the same momentum as Vin Diesel when he is hunting down his enemies. ;-)&lt;/p&gt;

&lt;p&gt;By adding support for many more boards we think HypriotOS gets a lot more attractive! What do you think?&lt;br /&gt;
And for which board would you want to see support next?&lt;/p&gt;

&lt;p&gt;As always use the comments below to give us feedback and share it on Twitter or Facebook.
You also might wanna discuss this article on &lt;a href=&#34;https://news.ycombinator.com/item?id=10374271&#34;&gt;HackerNews&lt;/a&gt; or vote it up if you find it interesting.&lt;/p&gt;

&lt;p&gt;Govinda aka &lt;a href=&#34;https://twitter.com/_beagile_&#34;&gt;@&lt;em&gt;beagile&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Docker running on a high-end 64-bit ARM gaming console for fun and profit</title>
      <link>http://blog.hypriot.com/post/getting-docker-running-on-a-highend-arm-gaming-console-for-fun-and-profit/</link>
      <pubDate>Mon, 28 Dec 2015 09:00:00 +0100</pubDate>
      
      <guid>http://blog.hypriot.com/post/getting-docker-running-on-a-highend-arm-gaming-console-for-fun-and-profit/</guid>
      <description>

&lt;p&gt;I don&amp;rsquo;t really know how this happened. Again. :(&lt;br /&gt;
Somehow over and over again these little ARM devices and maker devboards end up on my desk.&lt;/p&gt;

&lt;p&gt;So what is it this time?&lt;/p&gt;

&lt;p&gt;Well, look at this beauty because words cannot even begin to describe it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/nvidia-shieldtv/docker-on-nvidia-shieldtv.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Alright, start breathing again.&lt;/p&gt;

&lt;p&gt;It is called the &lt;a href=&#34;http://shield.nvidia.com&#34;&gt;Nvidia ShieldTV&lt;/a&gt; and it&amp;rsquo;s meant to be a media center.
Besides, it is one of the first Android gaming consoles that actually is worthy of the name.&lt;/p&gt;

&lt;p&gt;It would be a really great Christmas present for my son. But that is purely hypothetical and he is totally out of luck here.&lt;/p&gt;

&lt;p&gt;Why? Well, because the Nvidia Tegra X1 CPU is one of the first &lt;strong&gt;64-bit ARM CPU&amp;rsquo;s&lt;/strong&gt; that can be bought &lt;strong&gt;now&lt;/strong&gt; and it is even &lt;strong&gt;affordable&lt;/strong&gt; with a price tag well under 200 bucks.&lt;/p&gt;

&lt;p&gt;Being both Dieter and part of the Hypriot crew it should be clear now where this is heading, right?
As you all know Docker pirates love to be ARMed with little explosive stuff - and it doesn&amp;rsquo;t get more explosive than the Nvidia ShieldTV.&lt;/p&gt;

&lt;p&gt;So my son won&amp;rsquo;t get to play any games soon because &lt;strong&gt;I need&lt;/strong&gt; to get Docker running on this little beauty.
A device engineered for performance and made to game. So, let&amp;rsquo;s start playing&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;how-it-all-started:c306f860d159b9e8165ccb1c8378bdfe&#34;&gt;How it all started&lt;/h3&gt;

&lt;p&gt;This spring, I was really happy to see Jen-Hsun Huang, CEO of Nvidia Corp. announcing a great new &lt;a href=&#34;https://www.youtube.com/watch?v=1q30y_pfz5Q&#34;&gt;gaming console&lt;/a&gt; - the &lt;a href=&#34;http://shield.nvidia.com/android-tv&#34;&gt;Nvidia ShieldTV&lt;/a&gt;.
It&amp;rsquo;s basically a 4K AndroidTV gaming machine and SmartTV device for the living room that easily connects to your big TV screen.&lt;/p&gt;

&lt;p&gt;This device has some remarkable features and performance specs. The hardware is based upon the new &lt;a href=&#34;http://www.nvidia.com/object/tegra-x1-processor.html&#34;&gt;Nvidia Tegra X1&lt;/a&gt; chip with an incredible CPU/GPU power of more than 1 TeraFLOPs of performance. This is an ARMv8 (64-bit) processor with eight cores in a big-little configuration (4x A57 1.9GHz + 4x A53) and 3 Gbyte of memory.
For fast and efficient graphics, Nvidia has included 256 Maxwell GPU cores as well.&lt;/p&gt;

&lt;p&gt;Looking at the Tegra X1 chip, it&amp;rsquo;s dominated by the 256x CUDA GPU cores. Can you find the CPU cores? They are pretty hard to find. ;-)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/nvidia-shieldtv/nvidia-tegra-x1-chip.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;All in all, this device has a lot of CPU power and an incredible amount of GPU power as well - especially for a low-cost device &lt;a href=&#34;http://www.amazon.com/NVIDIA-SHIELD-Remote/dp/B013HJ13V0/ref=sr_1_3?ie=UTF8&amp;amp;qid=1451218402&amp;amp;sr=8-3&amp;amp;keywords=nvidia+shield&#34;&gt;at just $199.99&lt;/a&gt;.
It is easy to imagine that the ShieldTV could be used for so much more than just simple media streaming and gaming.&lt;/p&gt;

&lt;p&gt;But how?&lt;/p&gt;

&lt;h3 id=&#34;in-the-beginning-there-was:c306f860d159b9e8165ccb1c8378bdfe&#34;&gt;In the beginning there was &amp;hellip;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&amp;hellip; Android&lt;/strong&gt;. Yeah, that is the strange operating system from Google that comes preinstalled with the Nvidia ShieldTV.&lt;/p&gt;

&lt;p&gt;Android is OK for running the ShieldTV as a media center or gaming console, but for using it as general purpose desktop computer, another operating system would be much more convenient.
Linux for instance - if we were only able to hack the ShieldTV and install a Linux system on it, we would open it up for a much broader range of use cases.&lt;/p&gt;

&lt;p&gt;Alright, I would be content with Docker for a start.&lt;/p&gt;

&lt;p&gt;It turned out that this is everything but easy.&lt;/p&gt;

&lt;h3 id=&#34;then-there-was:c306f860d159b9e8165ccb1c8378bdfe&#34;&gt;Then there was &amp;hellip;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&amp;hellip; Ubuntu&lt;/strong&gt;. A few weeks ago I was able to install a basic Ubuntu 14.04 provided by Nvidia for their development boards.
This so called &lt;a href=&#34;https://developer.nvidia.com/embedded/linux-tegra&#34;&gt;Nvidia Linux For Tegra (L4T)&lt;/a&gt; is running a 64-bit kernel, but does only provide a 32-bit root file system.
Nvidia really? What a bummer. Hopefully they will change this in the future.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/nvidia-shieldtv/nvidia-shieldtv-running-ubuntu.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Later on, I created a Debian Jessie root file system directly from upstream, which is compiled for the ARM64 architecture.
Combining the standard Nvidia 64-bit kernel and a Debian Jessie root file system, I am able to boot the ShieldTV into a pure 64-bit Linux system - HELL YEAH, that&amp;rsquo;s it!&lt;/p&gt;

&lt;p&gt;Building the basic root file system was easy, but fixing all the network issues and Systemd settings was a real challenge.
Fortunately I got a lot of help from Andreas (another member of our Hypriot crew), who managed to fix them all.&lt;/p&gt;

&lt;h3 id=&#34;and-after-some-more-hard-work-there-was:c306f860d159b9e8165ccb1c8378bdfe&#34;&gt;And after some more hard work there was &amp;hellip;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&amp;hellip; HypriotOS&lt;/strong&gt;. As a result the ShieldTV is now booting into a pure 64-bit environment in less than ten seconds.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/nvidia-shieldtv/nvidia-shieldtv-running-hypriotos-arm64.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;As you can see the Nvidia ShieldTV is running our new 64-bit HypriotOS system on four CPU cores and has almost three gigabyte of memory available.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/nvidia-shieldtv/nvidia-shieldtv-running-hypriotos-htop.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;in-the-end-there-was:c306f860d159b9e8165ccb1c8378bdfe&#34;&gt;In the end there was &amp;hellip;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&amp;hellip; Docker&lt;/strong&gt;. This is the final piece that I wanted to get running. A first step in this direction is to get &lt;strong&gt;Go 1.5.1&lt;/strong&gt; and its build dependencies compiled.
After that it was a walk in the park to get the latest &lt;strong&gt;Docker v1.10.0-dev&lt;/strong&gt; compiled.&lt;/p&gt;

&lt;p&gt;The only annoying thing that remains right now is that we still have an old 3.10.61 kernel that is not optimized for running Docker.&lt;/p&gt;

&lt;h3 id=&#34;damn-it-the-last-20-are-always-the-toughest:c306f860d159b9e8165ccb1c8378bdfe&#34;&gt;Damn it! The last 20% are always the toughest&amp;hellip;&lt;/h3&gt;

&lt;p&gt;The last few days I tried to build a custom Linux kernel for the ShieldTV that has all the right kernel settings for Docker enabled.
But I had no luck at all.&lt;/p&gt;

&lt;p&gt;I was able to cross-compile a lot of different generic kernels for ARM64, but none of them were able to boot successfully on the ShieldTV.
And as you can imagine, debugging some kernel and boot issues without having a serial or UART console to get early boot messages, one is easily lost.&lt;/p&gt;

&lt;p&gt;Enabling different kernel settings, building the kernel, flashing it and then trying to boot it was a really difficult and time consuming process.
Yesterday I was finally lucky enough to get almost all of the important kernel settings for Docker working im my custom 3.10.61 Linux kernel.
Honestly, this is quite an old kernel version and far from being perfect for Docker but it works for now and the Docker Engine is running the first time on this great device!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/nvidia-shieldtv/nvidia-shieldtv-running-docker-1.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s spin up a Docker image or two! Funny enough even a Docker image that was built for the Raspberry Pi can run on ARM64.
Who can remember it? This is exactly the same web server container I was demoing live on stage at &lt;a href=&#34;http://blog.hypriot.com/post/dockercon2015/&#34;&gt;DockerCon 2015 in San Francisco&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/nvidia-shieldtv/nvidia-shieldtv-running-docker-3.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Maybe it is more interesting to run a real ARM64 Docker image to proof that our ARM 64-bit Docker engine is working just fine.
So here we go&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/nvidia-shieldtv/nvidia-shieldtv-running-docker-4.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;That is already pretty impressive, but there is still a lot to do.&lt;/p&gt;

&lt;p&gt;In the spirit of HypriotOS we want to deliver an easy out-of-the-box experience with the latest and greatest of software components.
This means we need a really easy way to flash and install HypriotOS on the ShieldTV similar to how we do it for the Raspberry Pi.
And all the included components should be really up-to-date: the Linux kernel (4.x) and of course all of the Docker tools as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/nvidia-shieldtv/nvidia-shieldtv-on-my-desktop.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Maybe there are some of you who - after reading this article - want to get started hacking on the ShieldTV, too.
We really would appreciate getting some help here to move faster.
That&amp;rsquo;s why we will publish the technical details in the coming weeks, so you can have a look and start hacking yourself.&lt;/p&gt;

&lt;p&gt;Please send us your feedback on our &lt;a href=&#34;https://gitter.im/hypriot/talk&#34;&gt;Gitter channel&lt;/a&gt; or tweet your thoughts and ideas on this project at &lt;a href=&#34;https://twitter.com/HypriotTweets&#34;&gt;@HypriotTweets&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dieter &lt;a href=&#34;https://twitter.com/Quintus23M&#34;&gt;@Quintus23M&lt;/a&gt; &amp;amp; Andreas &lt;a href=&#34;https://twitter.com/firecyberice&#34;&gt;@firecyberice&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
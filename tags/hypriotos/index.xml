<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hypriotos on Docker Pirates ARMed with explosive stuff</title>
    <link>http://blog.hypriot.com/tags/hypriotos/</link>
    <description>Recent content in Hypriotos on Docker Pirates ARMed with explosive stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Jan 2016 16:00:00 +0200</lastBuildDate>
    <atom:link href="http://blog.hypriot.com/tags/hypriotos/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to get Docker working on your favourite ARM board with HypriotOS</title>
      <link>http://blog.hypriot.com/post/how-to-get-docker-working-on-your-favourite-arm-board-with-hypriotos/</link>
      <pubDate>Mon, 18 Jan 2016 16:00:00 +0200</pubDate>
      
      <guid>http://blog.hypriot.com/post/how-to-get-docker-working-on-your-favourite-arm-board-with-hypriotos/</guid>
      <description>&lt;p&gt;It all began when Dieter aka &lt;a href=&#34;https://twitter.com/Quintus23M&#34;&gt;@Quintus23M&lt;/a&gt; started to experiment with the NVIDIA ShieldTV.
The ShieldTV is a curious little thing. Sold as a media hub for your living room it does deliver one teraflop of processing power.
On top of that it is one of the first 64-bit ARM boards that can be bought for a reasonable price.&lt;/p&gt;

&lt;p&gt;Regular readers of our blog know that it is not in Dieter&amp;rsquo;s nature to resist the Sirens voices of such an appealing beauty for long.
Read on to learn what happened next&amp;hellip;&lt;/p&gt;

&lt;p&gt;Last December he started the work to get Docker running on the ShieldTV and &lt;a href=&#34;http://blog.hypriot.com/post/getting-docker-running-on-a-highend-arm-gaming-console-for-fun-and-profit/&#34;&gt;described his journey&lt;/a&gt; on our blog.
The gist of it is that it was quite an involved process of creating his own custom Debian based operating system that supported building Go and Docker for ARM64.&lt;/p&gt;

&lt;p&gt;The work of Dieter on the ShieldTV inspired our team to revisit the way we were building our beloved HypriotOS for the Raspberry Pi.
Longing to publish the way we build it for quite some time we had been ashamed to actually do it because it was such a complicated mess.
Don&amp;rsquo;t get me wrong - it worked well enough and was completely automated with our CI system and even tested, but ultimately it was difficult to understand and change.&lt;/p&gt;

&lt;p&gt;So Dieter&amp;rsquo;s work got us thinking:
What if we could restructure the build process of HypriotOS in such a way that it would be built in distinct layers that would create distinct build artifacts on their own.
What if those artifacts could be tested and published on their own, too? Only to be assembled in a final step at the end to create a fully working SD card image.
What if those distinct steps were self-contained and easy to understand?&lt;/p&gt;

&lt;p&gt;Last week we had some time at our hands and we started working on a build process that would be the answer to all those questions.
It is certainly still a little rough around the edges and needs further tweaking but it produces a working SD card image for the Raspberry Pi.
We consider it beta quality and it is not yet completely on par with our stable HypriotOS Hector image, but it already runs very well.&lt;/p&gt;

&lt;p&gt;The main repository for building HypriotOS SD card image for the Raspberry Pi can be found at GitHub in the &lt;a href=&#34;https://github.com/hypriot/image-builder-rpi&#34;&gt;Image-Builder-Rpi Repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So what happens in this repository?&lt;/p&gt;

&lt;p&gt;Basically it just assembles prepared artifacts into a working SD card image which then can be &lt;a href=&#34;https://github.com/hypriot/flash&#34;&gt;easily flashed&lt;/a&gt; onto a SD card.&lt;/p&gt;

&lt;p&gt;The artifacts that are combined here are produced elsewhere each in their own GitHub repository:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hypriot/os-rootfs&#34;&gt;a basic filesystem that is based on Debian Jessie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hypriot/rpi-kernel&#34;&gt;a Raspberry Pi compatible Linux kernel and firmware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hypriot/image-builder-raw&#34;&gt;a Raspberry Pi image file that contains the necessary partitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://packagecloud.io/Hypriot/Schatzkiste&#34;&gt;a couple of Debian packages with software like Docker, Docker-Machine and Docker-Compose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The basic idea is that all these artifacts can be build and tested with the help of Docker.
For instance if you look into the &lt;a href=&#34;https://github.com/hypriot/os-rootfs&#34;&gt;os-rootfs&lt;/a&gt; repository you will find a &lt;code&gt;Dockerfile&lt;/code&gt; in the root of the project that will allow you to create a build and test environment for the root filesystem.&lt;/p&gt;

&lt;p&gt;This makes two important things possible: Firstly it allows others to build the rootfs locally on their own computer and fix or extend the rootfs with ease.
And secondly the rootfs is build and tested on &lt;a href=&#34;https://travis-ci.org/hypriot/os-rootfs&#34;&gt;Travis CI&lt;/a&gt; everytime somebody creates - for instance - a pull request.
Combined these two points create a transparent development process with instant feedback.&lt;/p&gt;

&lt;p&gt;It turned out that this approach is generic and powerful enough to be applied - you probably already guessed it - to the NVIDIA ShieldTV, too.
By publishing the &lt;a href=&#34;https://github.com/hypriot/image-builder-nvidia-shieldtv&#34;&gt;Image-Builder-NVIDIA-ShieldTV&lt;/a&gt; repository we are making good on Dieter&amp;rsquo;s promise to publish the sources for Dieter&amp;rsquo;s journey with the ShieldTV.&lt;/p&gt;

&lt;p&gt;But hold on - that&amp;rsquo;s not all. To proof to ourselves that this process allows to easily port HypriotOS to different development boards we created &lt;a href=&#34;https://github.com/hypriot/image-builder-odroid-c1&#34;&gt;another Github repository&lt;/a&gt;.
It builds a SD card image for the very capable &lt;a href=&#34;http://www.hardkernel.com/main/products/prdt_info.php?g_code=G143703355573&#34;&gt;ODROID C1+&lt;/a&gt; development board.
Similar to the Raspberry Pi 2 the ODROID C1+ features a quad core ARMv7 CPU with 1 GB of memory. Distinct from the Raspberry Pi 2 it features a gigabit ethernet port.
A highlevel comparision of both devices can be found at &lt;a href=&#34;http://www.cnx-software.com/2015/02/02/raspberry-pi-2-odroid-c1-development-boards-comparison/&#34;&gt;CNX-Software&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this third supported board for HypriotOS we proofed to ourselves that this new build process makes it not only feasible but actually quite easy to extend the support of HypriotOS to new development boards.&lt;/p&gt;

&lt;p&gt;Overall the relation of the different repositories now looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.hypriot.com/images/hypriotos-xxx/hypriotos_buildpipeline.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;All these changes also redefined for us what HypriotOS is all about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our old mission statement for HypriotOS was:&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;&amp;ldquo;HypriotOS is a minimal operating system for the Raspberry Pi 1 &amp;amp; 2 that provides an optimized environment for running Docker. It is very easy to install and use. HypriotOS prides itself for coming with very recent versions of the Linux kernel and all included software.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our new mission statement is:&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;&amp;ldquo;HypriotOS is a minimal Debian-based operating system for &lt;strong&gt;many popular IoT devices&lt;/strong&gt; that provides an optimized environment for running Docker. It is very easy to install and use. HypriotOS prides itself for coming with very recent versions of the Linux kernel and all included software.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It is just a small change but it will have big implications.&lt;/p&gt;

&lt;p&gt;One of the biggest downsides of having an ever increasing amount of IoT devices to choose from is fragmentation. Each device comes with varying support for existing operating systems.
Take Linux for instance. Even if a vendor provides Linux support for a device from the start - it is often based on an outdated Linux kernel.
This in turn often enough means that you can only use old software on top of it. Docker with OverlayFS is such an example. It can only be used with a Linux kernel greater than 3.18.
And that&amp;rsquo;s not only a problem of the small vendors, it even happens with big vendors like NVIDIA. The NVIDIA ShieldTV is provided only with a 3.10 Linux kernel while the latest stable Linux kernel is 4.4.
Not to mention that the 3.10 kernel is &lt;a href=&#34;https://www.kernel.org/category/releases.html&#34;&gt;not supported any more by the kernel maintainers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this background in mind a major goal of HypriotOS is to provide an operating system that behaves as similar as possible on &lt;strong&gt;different&lt;/strong&gt; IoT devices.
While I know that this might prove to be a difficult task - especially in regards to support for recent Linux kernels - I think it might prove to be a worthwhile effort that provides much value.&lt;/p&gt;

&lt;p&gt;Providing a beta version of HypriotOS that supports three different development boards is a first step into that direction.&lt;/p&gt;

&lt;p&gt;Being just able to flash HypriotOS on a SD card and get going in minutes is one of the basic promises of HypriotOS, so without further ado you can download it here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/hypriot/image-builder-rpi/releases&#34;&gt;HypriotOS for the Raspberry Pi&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/hypriot/image-builder-nvidia-shieldtv/releases&#34;&gt;HypriotOS for the NVIDIA ShieldTV&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/hypriot/image-builder-odroid-c1/releases&#34;&gt;HypriotOS for the ODROID C1+&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully you have a lot of fun trying out what HypriotOS has to offer!&lt;br /&gt;
&lt;strong&gt;Note:&lt;/strong&gt; We changed the default username to &lt;code&gt;pirate&lt;/code&gt; (password &lt;code&gt;hypriot&lt;/code&gt;) and disabled the &lt;code&gt;root&lt;/code&gt; user for security reasons.&lt;/p&gt;

&lt;p&gt;By adding support for many more boards we think HypriotOS gets a lot more attractive! What do you think?&lt;br /&gt;
And for which board would you want to see support next?
Help us to get your favourite ARM board supported by HypriotOS!&lt;/p&gt;

&lt;p&gt;As always use the comments below to give us feedback and share it on Twitter or Facebook.
You also might wanna discuss this article on &lt;a href=&#34;https://news.ycombinator.com/item?id=10926502&#34;&gt;HackerNews&lt;/a&gt; or vote it up if you find it interesting.&lt;/p&gt;

&lt;p&gt;Govinda aka &lt;a href=&#34;https://twitter.com/_beagile_&#34;&gt;@&lt;em&gt;beagile&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with Docker on your Raspberry Pi</title>
      <link>http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device/</link>
      <pubDate>Fri, 15 May 2015 20:16:11 +0200</pubDate>
      
      <guid>http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device/</guid>
      <description>

&lt;p&gt;Docker is a new technology that emerged in the last two years and took the software world by storm. What exactly is Docker and why did it became so popular in such short time?&lt;/p&gt;

&lt;p&gt;The goal of this guide is to answer these questions and to get you started with Docker on a Raspberry Pi in no time.
We are going to cover the procedure for Windows, OS X and Linux users.&lt;/p&gt;

&lt;h2 id=&#34;what-the-heck-is-docker-and-why-would-i-use-it:397c66ef19f9f061b6711d2e296cb276&#34;&gt;What the heck is Docker and why would I use it?&lt;/h2&gt;

&lt;p&gt;Docker simplifies the packaging, distribution, installation and execution of (complex) applications.&lt;/p&gt;

&lt;p&gt;In this context, applications are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;blogging platforms like &lt;a href=&#34;https://wordpress.com&#34;&gt;Wordpress &lt;/a&gt; or &lt;a href=&#34;https://ghost.org/&#34;&gt;Ghost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tools for software collaboration like &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;Gitlab&lt;/a&gt; or &lt;a href=&#34;http://gogs.io/&#34;&gt;Gogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;file synchronization platforms like &lt;a href=&#34;https://owncloud.org/&#34;&gt;OwnCloud&lt;/a&gt; or &lt;a href=&#34;http://seafile.com/en/home/&#34;&gt;Seafile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These kinds of applications usually consist of many components which need to be installed and configured. This is often a time consuming and frustrating experience for users.&lt;/p&gt;

&lt;p&gt;Docker allows administrators or developers to package these applications into something called containers.
Containers are self-contained, preconfigured packages that a user can fetch and run with just a single command.
By keeping different software components separated in containers they can also be easily updated or removed without influencing each other.
There are many more advantages of using Docker; the details of which can be found in the official &lt;a href=&#34;https://docs.docker.com&#34;&gt;Docker Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;the-raspberry-pi-an-easy-low-cost-way-of-getting-started-with-docker:397c66ef19f9f061b6711d2e296cb276&#34;&gt;The Raspberry Pi: An easy, low cost way of getting started with Docker&lt;/h2&gt;

&lt;p&gt;If we piqued your curiosity and you would like to dive into the magic world of Docker one of the easiest ways is by using Docker on a &lt;a href=&#34;https://www.raspberrypi.org/help/what-is-a-raspberry-pi/&#34;&gt;Raspberry Pi&lt;/a&gt;.
According to the creators of the Raspberry Pi it is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a low cost, credit-card sized computer that plugs into a computer monitor or TV, and uses a standard keyboard and mouse.
It is a capable little device that enables people of all ages to explore computing, and to learn how to program in languages like Scratch and Python.
It’s capable of doing everything you’d expect a desktop computer to do, from browsing the internet and playing high-definition video, to making spreadsheets, word-processing, and playing games.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The goal of this guide is to show you the necessary steps to get you started with Docker on a Raspberry Pi. Please follow the guide that covers your operating system and continue below once you have finished.&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-and-windows-on-the-raspberry-pi&#34;&gt;The Windows guide for setting up Docker on a Raspberry Pi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-and-mac-on-the-raspberry-pi&#34;&gt;The Mac OS X guide for setting up Docker on a Raspberry Pi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-and-linux-on-the-raspberry-pi&#34;&gt;The Linux guide for setting up Docker on a Raspberry Pi&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;going-wild-with-docker-what-can-you-actually-do-with-it:397c66ef19f9f061b6711d2e296cb276&#34;&gt;Going wild with Docker! What can you actually do with it?&lt;/h2&gt;

&lt;p&gt;As stated in the beginning Docker simplifies the way software is distributed and run. We even said that you would only need one command for that. It is time to prove it.&lt;/p&gt;

&lt;p&gt;Just type &lt;code&gt;docker run&lt;/code&gt; into the terminal of your Raspberry Pi:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run -d -p 80:80 hypriot/rpi-busybox-httpd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command will download and start the Docker image &lt;em&gt;hypriot/rpi-busybox-httpd&lt;/em&gt; which contains a tiny webserver. Once an image is started it is called a &lt;em&gt;container&lt;/em&gt;. An image can also be used to start multiple containers.
You can check if your container is running by typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker ps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see the container you just started in the container list.&lt;/p&gt;

&lt;p&gt;Now you can open up your browser on your workstation and type in the IP address of your Raspberry Pi to see that it really works!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/browser-pi-hypriot-logo.png&#34; alt=&#34;hypriot-logo&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;One great aspect of running a Docker-based app is, you can be sure that it works on every machine running Docker with one exception.&lt;/p&gt;

&lt;p&gt;Here we run Docker on a Raspberry Pi. So the CPU architecture here is &lt;strong&gt;ARM&lt;/strong&gt; rather than x86/x64 by Intel or AMD. Thus, Docker-based apps you use have to be packaged specifically for ARM architecture! Docker-based apps packaged for x86/x64 will not work and will result in an error such as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FATA[0003] Error response from daemon: Cannot start container 0f0fa3f8e510e53908e6a459e817d600b9649e621e7dede974d6a65761ad39e5: exec format error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Keep this in mind when searching for apps on the &lt;a href=&#34;https://registry.hub.docker.com/search?q=library&#34;&gt;Docker Hub&lt;/a&gt; - &lt;strong&gt;the source&lt;/strong&gt; for Docker apps/images. If you see the keyword &lt;em&gt;RPI&lt;/em&gt; or &lt;em&gt;ARM&lt;/em&gt; in the heading or description, this app can usually be used for the Raspberry Pi.&lt;/p&gt;

&lt;p&gt;We prepared a couple of &lt;a href=&#34;https://hub.docker.com/u/hypriot/&#34;&gt;Raspberry Pi ready images&lt;/a&gt; for your convenience. Try them out now and have fun!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://registry.hub.docker.com/search?q=hypriot&amp;searchfield=&#34;&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/dockerhub-hypriot-search.png&#34; alt=&#34;dockerhub-hypriot-search&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to get Docker running on your Raspberry Pi using Linux</title>
      <link>http://blog.hypriot.com/getting-started-with-docker-and-linux-on-the-raspberry-pi/</link>
      <pubDate>Fri, 15 May 2015 20:16:11 +0200</pubDate>
      
      <guid>http://blog.hypriot.com/getting-started-with-docker-and-linux-on-the-raspberry-pi/</guid>
      <description>

&lt;p&gt;This guide shows you how to get Docker running on your Raspberry Pi using a &lt;strong&gt;Linux workstation&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have not read the getting started guide about Docker on the Raspberry Pi yet you might wanna check it out first: &lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device&#34;&gt;Getting started on your ARM device&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We tried to make this guide as concise as possible. Make sure that you know the basics about the command line and you should be ready to go.
If you don&amp;rsquo;t you can learn the basics in &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/an-introduction-to-the-linux-terminal&#34;&gt;An Introduction to the Linux Terminal&lt;/a&gt; and come back afterwards.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;hardware&lt;/strong&gt; you gonna need to follow along is a Raspberry Pi 1 or 2 and one SD card.&lt;br /&gt;
If you are going to use a Raspberry 2 you will have to use a microSD card - otherwise a normal SD card is sufficient.
We recommend a size of at least 4 GB.&lt;br /&gt;
The SD card contains all the software which we are going to use on our Raspberry Pi.
With software we basically mean two things: first an operating system for your Raspberry Pi and second the software you as user would like to use - e.g. a browser or a word processing program.
In our case the software we wanna use is Docker.&lt;/p&gt;

&lt;p&gt;We - from Hypriot - created a preconfigured &lt;a href=&#34;http://blog.hypriot.com/downloads/&#34;&gt;SD card image&lt;/a&gt; which contains everything you need to run Docker on your Raspberry Pi.
To use the image you first have to download and transfer it to your SD card. Transferring an image to an SD card is often referred to as &lt;em&gt;flashing&lt;/em&gt;.
Afterwards you just have to insert the flashed SD card into your Raspberry Pi and start it up.&lt;/p&gt;

&lt;h3 id=&#34;download-the-hypriot-docker-sd-card-image:8814904f208dcaade82991443c7514e0&#34;&gt;Download the Hypriot Docker SD card image&lt;/h3&gt;

&lt;p&gt;Download our latest SD card image from the &lt;a href=&#34;http://blog.hypriot.com/downloads/&#34;&gt;download page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After the download is completed open a terminal window. To do this use the search function of your Linux distribution and type &lt;em&gt;terminal&lt;/em&gt; and press &lt;em&gt;Enter&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now we will extract the downloaded zip file. Go to your &lt;em&gt;Download&lt;/em&gt; folder first by typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/Downloads
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Extract the zip file with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;unzip hypriot-rpi-201???.img.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After the file is unzipped you will have a new file with an &lt;strong&gt;.img&lt;/strong&gt; extension.
In the next step we will flash this file onto your SD card.&lt;/p&gt;

&lt;h3 id=&#34;flash-the-downloaded-image-to-your-sd-card:8814904f208dcaade82991443c7514e0&#34;&gt;Flash the downloaded image to your SD card&lt;/h3&gt;

&lt;p&gt;First put your SD card into the computer. Then in the terminal type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lsblk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see a list of all your disks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/linux-screenies/lsblk.png&#34; alt=&#34;lsblk&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Now identify the SD Card. Look at the fourth column which shows the size of the devices of your workstation.
One item in the list should have a size that is very close to the size of your SD card.
From there get the identifier which is shown in the first column.
In this case the identifier is &lt;code&gt;mmcblk0&lt;/code&gt; and 29,5G refers to a 32 GB sized SD card.&lt;/p&gt;

&lt;p&gt;Next you need to make sure that the partitions of the SD card are &lt;strong&gt;not&lt;/strong&gt; mounted.
Check the column &lt;em&gt;MOUNTPOINT&lt;/em&gt; – if you have any entries in the row of your SD card you need to unmount them.
If not you can skip the unmount command.&lt;/p&gt;

&lt;p&gt;As you can see in the last screenshot we have to unmount one partition.
Copy and paste the path you see in your own &lt;em&gt;MOUNTPOINT&lt;/em&gt; column behind the &lt;code&gt;unmount&lt;/code&gt; command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;umount /run/media/mac/8734-1E4C
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we are ready to flash the SD card. We are going to use the &lt;code&gt;dd&lt;/code&gt; command for this.&lt;/p&gt;

&lt;p&gt;Before we start make sure you&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;replace the parameter &lt;code&gt;if=hypriot-rpi...&lt;/code&gt; with the path to the downloaded image&lt;/li&gt;
&lt;li&gt;replace the parameter &lt;code&gt;of=/dev/mmcblk0&lt;/code&gt; with the identifier of your SD card&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo dd if=hypriot-rpi-201???.img of=/dev/mmcblk0 bs=1M
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While this command is executed you won&amp;rsquo;t get any information about its progress.
Depending on your hardware and the performance of your SD card it will take up to five minutes to flash the image.&lt;/p&gt;

&lt;p&gt;When &lt;code&gt;dd&lt;/code&gt; is finished you should get an output like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/linux-screenies/after-dd.png&#34; alt=&#34;after-dd&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Finally unmount the SD card again in the same way as before.&lt;/p&gt;

&lt;h3 id=&#34;start-your-raspberry-pi-with-the-sd-card:8814904f208dcaade82991443c7514e0&#34;&gt;Start your Raspberry Pi with the SD card&lt;/h3&gt;

&lt;p&gt;Boot your Raspberry Pi by&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;connecting the Raspberry Pi to your local network via an ethernet cable&lt;/li&gt;
&lt;li&gt;putting the SD card into the designated slot&lt;/li&gt;
&lt;li&gt;plugging in the power adapter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After finishing the last step your Raspberry Pi will boot and the LEDs should start blinking.
The very first boot will take one to three minutes as the file system will be resized.&lt;/p&gt;

&lt;h3 id=&#34;ensure-everything-works:8814904f208dcaade82991443c7514e0&#34;&gt;Ensure everything works&lt;/h3&gt;

&lt;p&gt;To check if Docker is actually running we need to log into the Raspberry Pi.&lt;/p&gt;

&lt;p&gt;To do this we need to find out the IP address of your Raspberry Pi first.
If you are not sure what the IP-Address of your PI is, there are different ways of finding it out.
One way is to use the tool &lt;code&gt;nmap&lt;/code&gt; which you might need to install first.&lt;/p&gt;

&lt;p&gt;Depending on the Linux distribution you are using you need one of the following commands to install &lt;code&gt;nmap&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install nmap   # for debian based distros
yum install nmap       # for red hat based distros
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First identify the IP address of your own workstation. Type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hostname -I
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see in the following screenshot our IP address is &lt;code&gt;192.168.0.101&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/linux-screenies/hostname-i.png&#34; alt=&#34;hostname-i&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Then replace the IP address in front of the &lt;code&gt;/24&lt;/code&gt; with yours and type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nmap -sP 192.168.0.101/24 | grep black-pearl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/linux-screenies/nmap.png&#34; alt=&#34;nmap result of query&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The output of the &lt;code&gt;nmap&lt;/code&gt; command should show you the IP address of your Raspberry Pi.
If you get a blank line without an IP address your Raspberry Pi is probably not connected to the network.
Or there is a problem with the SD card which prevents the Raspberry Pi from booting.&lt;/p&gt;

&lt;p&gt;After you found out the IP address establish a connection to the Raspberry Pi with the ssh command.
Replace the IP address after the &lt;code&gt;@&lt;/code&gt; with the one of your Raspberry Pi.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh pirate@192.168.0.27
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you are asked for the password type &lt;code&gt;hypriot&lt;/code&gt; and hit &lt;em&gt;Enter&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The first time you establish the connection you will be asked if you are sure that you want to connect to the Raspberry Pi - answer with &lt;code&gt;yes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If everything went fine you should now see the &lt;em&gt;HypriotOS&lt;/em&gt; command line prompt waiting for your input.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/linux-screenies/rpi-first-connect.png&#34; alt=&#34;screenshot docker first connection&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Finally check if the Docker service is running by typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker info
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output of the &lt;code&gt;docker info&lt;/code&gt; command should look similar to:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/linux-screenies/docker-info.png&#34; alt=&#34;screenshot docker info&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congratulations! You have succeeded in getting Docker running on your Raspberry Pi!&lt;/strong&gt; :)&lt;/p&gt;

&lt;p&gt;You are now ready to continue your exploration of Docker with our &lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device#going-wild-with-docker-what-can-you-actually-do-with-it:397c66ef19f9f061b6711d2e296cb276&#34;&gt;Getting Started Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have fun!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to get Docker running on your Raspberry Pi using Mac OS X</title>
      <link>http://blog.hypriot.com/getting-started-with-docker-and-mac-on-the-raspberry-pi/</link>
      <pubDate>Fri, 15 May 2015 20:16:11 +0200</pubDate>
      
      <guid>http://blog.hypriot.com/getting-started-with-docker-and-mac-on-the-raspberry-pi/</guid>
      <description>

&lt;p&gt;This guide shows you how to get Docker running on your Raspberry Pi using a &lt;strong&gt;Mac OS X workstation&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have not read the getting started guide about Docker on the Raspberry Pi yet you might wanna check it out first: &lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device&#34;&gt;Getting started with Docker on your ARM Device&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We tried to make this guide as concise as possible. Make sure that you know the basics about the command line and you should be ready to go.
If you don&amp;rsquo;t you can learn the basics in &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/an-introduction-to-the-linux-terminal&#34;&gt;An Introduction to the Linux Terminal&lt;/a&gt; and come back afterwards.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;hardware&lt;/strong&gt; you gonna need to follow along is a Raspberry Pi 1 or 2 and one SD card.
If you are going to use a Raspberry 2 you will have to use a microSD card - otherwise a normal SD card is sufficient.
We recommend a size of at least 4 GB.&lt;/p&gt;

&lt;p&gt;The SD card contains all the software which we are going to use on our Raspberry Pi.
With software we basically mean two things: first an operating system for your Raspberry Pi and second the software you as user would like to use - e.g. a browser or a word processing program.
In our case the software we wanna use is Docker.&lt;/p&gt;

&lt;p&gt;We - from Hypriot - created a preconfigured &lt;a href=&#34;http://blog.hypriot.com/downloads/&#34;&gt;SD card image&lt;/a&gt; which contains everything you need to run Docker on your Raspberry Pi.
To use the image you first have to download and transfer it to your SD card. Transferring an image to an SD card is often referred to as &lt;em&gt;flashing&lt;/em&gt;.
Afterwards you just have to insert the flashed SD card into your Raspberry Pi and start it up.&lt;/p&gt;

&lt;h3 id=&#34;download-the-hypriot-docker-sd-card-image:ca4b4a19668a2ec6a58c5af490c910c5&#34;&gt;Download the Hypriot Docker SD card image&lt;/h3&gt;

&lt;p&gt;Download our latest SD card image from the &lt;a href=&#34;http://blog.hypriot.com/downloads/&#34;&gt;download page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After the download is completed open a terminal window. To do this press &lt;strong&gt;CMD&lt;/strong&gt; + &lt;strong&gt;Whitespace&lt;/strong&gt; and type &lt;em&gt;terminal&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now we will extract the downloaded zip file. Go to your &lt;em&gt;Download&lt;/em&gt; folder first by typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/Downloads
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now extract the zip file with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;unzip hypriot-rpi-201???.img.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After the file is unzipped you will have a new file with an &lt;strong&gt;.img&lt;/strong&gt; extension.
In the next step we will flash this file onto your SD card.&lt;/p&gt;

&lt;h3 id=&#34;flash-the-downloaded-image-to-your-sd-card:ca4b4a19668a2ec6a58c5af490c910c5&#34;&gt;Flash the downloaded image to your SD card&lt;/h3&gt;

&lt;p&gt;First put your SD card into the computer. Then in the terminal type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;diskutil list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see a list of all your disks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/mac-screenies/diskutil-list.png&#34; alt=&#34;disktuil-list&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Now identify the SD card. Look at the fourth column which shows the size of the devices of your workstation.
One item in the list should have a size that is very close to the size of your SD card.
From there get the identifier which is shown in the first column.
Here the identifier is &lt;code&gt;/dev/disk5&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now unmount the SD card. Make sure to replace &lt;code&gt;/dev/disk5&lt;/code&gt; with the identifier of your sd card.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;diskutil unmountdisk /dev/disk5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As a result you should see&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/mac-screenies/unmount.png&#34; alt=&#34;Screenshot unmounted&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Now we are ready to flash the SD card. We are going to use the &lt;code&gt;dd&lt;/code&gt; command for this.&lt;/p&gt;

&lt;p&gt;Before you execute the command below, make sure to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;replace the parameter after &lt;code&gt;if=&lt;/code&gt; with the path to the downloaded image&lt;/li&gt;
&lt;li&gt;replace the parameter after &lt;code&gt;of=&lt;/code&gt; with the identifier of your SD card. Make sure you put a &lt;code&gt;r&lt;/code&gt; in front of &lt;code&gt;disk&lt;/code&gt; as you can see in the example&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo dd if=hypriot-rpi-201???.img of=/dev/rdisk5 bs=1m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While this command is executed you won&amp;rsquo;t get any information about its progress.
Depending on your hardware and the performance of your SD card it can take up to five minutes to flash the image.
When the &lt;code&gt;dd&lt;/code&gt; is finished, you should get an output like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/mac-screenies/dd-success.png&#34; alt=&#34;after-dd-success&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Finally unmount the SD card again in the same way as before.&lt;/p&gt;

&lt;h3 id=&#34;start-your-raspberry-pi-with-the-sd-card:ca4b4a19668a2ec6a58c5af490c910c5&#34;&gt;Start your Raspberry Pi with the SD card&lt;/h3&gt;

&lt;p&gt;Boot your Raspberry Pi by&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;connecting the Raspberry Pi to your local network via an ethernet cable&lt;/li&gt;
&lt;li&gt;putting the SD card into the designated slot&lt;/li&gt;
&lt;li&gt;plugging in the power adapter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After finishing the last step your Raspberry Pi will boot and the LEDs should start blinking.
The very first boot will take one to three minutes as the file system will be resized.&lt;/p&gt;

&lt;h3 id=&#34;ensure-everything-works:ca4b4a19668a2ec6a58c5af490c910c5&#34;&gt;Ensure everything works&lt;/h3&gt;

&lt;p&gt;To check if Docker is actually running we need to log into the Raspberry Pi.&lt;/p&gt;

&lt;p&gt;To do this we need to find out the IP address of your Raspberry Pi first.
If you are not sure what the IP-Address of your PI is, there are different ways of finding it out.
One way is to use the &lt;code&gt;nmap&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;First identify the IP address of your own workstation. Type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ipconfig getifaddr en1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If it does not report back an IP address, you are probably connected via cable to your network. Try &lt;code&gt;en0&lt;/code&gt; instead of &lt;code&gt;en1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;As you can see in the following screenshot our IP address is &lt;code&gt;192.168.0.101&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/mac-screenies/own-ip-address.png&#34; alt=&#34;own-ip-address&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Then replace the IP address in front of the &lt;code&gt;/24&lt;/code&gt; with yours and type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nmap -sP 192.168.0.100/24 | grep black-pearl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output of the &lt;code&gt;nmap&lt;/code&gt; command should show you the IP address of your Raspberry Pi.
If you get a blank line without an IP address your Raspberry Pi is probably not connected to the network.
Or there is a problem with the SD card which prevents the Raspberry Pi from booting.&lt;/p&gt;

&lt;p&gt;After you found out the IP address establish a connection to the Raspberry Pi with the ssh command.
Replace the IP address after the &lt;code&gt;@&lt;/code&gt; with the one of your Raspberry Pi.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh pirate@192.168.178.10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you are asked for the password type &lt;code&gt;hypriot&lt;/code&gt; and hit &lt;em&gt;Enter&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The first time you establish the connection you will be asked if you are sure that you want to connect to the Raspberry Pi - answer with &lt;code&gt;yes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If everything went fine you should now see the &lt;em&gt;HypriotOS&lt;/em&gt; command line prompt waiting for your input.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/mac-screenies/hypriot-ssh-prompt-after-login.png&#34; alt=&#34;hypriot-ssh-prompt-after-login&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Finally check if the Docker Service is running by typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker info
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output of the &lt;code&gt;docker info&lt;/code&gt; command should look similar to:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/mac-screenies/docker-info.png&#34; alt=&#34;docker-info&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congratulations! You have succeeded in getting Docker running on your Raspberry Pi!&lt;/strong&gt; :)&lt;/p&gt;

&lt;p&gt;You are now ready to continue your exploration of Docker with our &lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device#going-wild-with-docker-what-can-you-actually-do-with-it:397c66ef19f9f061b6711d2e296cb276&#34;&gt;Getting Started Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have fun!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to get Docker running on your Raspberry Pi using Windows</title>
      <link>http://blog.hypriot.com/getting-started-with-docker-and-windows-on-the-raspberry-pi/</link>
      <pubDate>Fri, 15 May 2015 20:16:11 +0200</pubDate>
      
      <guid>http://blog.hypriot.com/getting-started-with-docker-and-windows-on-the-raspberry-pi/</guid>
      <description>

&lt;p&gt;This guide shows you how to get Docker running on your Raspberry Pi using a &lt;strong&gt;Windows workstation&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have not read the getting started guide about Docker on the Raspberry Pi yet you might wanna check it out first: &lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device&#34;&gt;Getting started on your ARM device&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;strong&gt;hardware&lt;/strong&gt; you gonna need to follow along is a Raspberry Pi 1 or 2 and one SD card.
If you are going to use a Raspberry 2 you will have to use a microSD card - otherwise a normal SD card is sufficient.
We recommend a size of at least 4 GB.&lt;/p&gt;

&lt;p&gt;The SD card contains all the software which we are going to use on our Raspberry Pi.
With software we basically mean two things: first an operating system for your Raspberry Pi and second the software you as user would like to use - e.g. a browser or a word processing program.
In our case the software we wanna use is Docker.&lt;/p&gt;

&lt;p&gt;We - from Hypriot - created a preconfigured &lt;a href=&#34;http://blog.hypriot.com/downloads/&#34;&gt;SD card image&lt;/a&gt; which contains everything you need to run Docker on your Raspberry Pi.
To use the image you first have to download and transfer it to your SD card. Transferring an image to an SD card is often referred to as &lt;em&gt;flashing&lt;/em&gt;.
Afterwards you just have to insert the flashed SD card into your Raspberry Pi and start it up.&lt;/p&gt;

&lt;p&gt;For this tutorial you will need to install four applications which we are going to use later. Please follow the download links and install them. Note the installation remarks.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Application&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.7-zip.de&#34;&gt;7-Zip&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;For extracting the compressed SD card image. &lt;/br&gt; &lt;em&gt;Make sure you choose the download file that fits your workstations&amp;rsquo;s architecture (x32 vs. x64)!&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://sourceforge.net/projects/win32diskimager/&#34;&gt;Win32 Disk Imager&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;For flashing the SD card image to the SD card. &lt;/br&gt; &lt;em&gt;During installation you will find a checkbox called &amp;ldquo;Start Pcap-Service at startup&amp;rdquo;. We recommend to disable it.&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://the.earth.li/~sgtatham/putty/latest/x86/putty.exe&#34;&gt;Putty&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;For establishing a connection to the Raspberry Pi &lt;/br&gt; &lt;em&gt;Just download it. No installation needed.&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://sourceforge.net/projects/nmap.mirror/?source=typ_redirect&#34;&gt;Zenmap&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;For identifying the IP address of your Raspberry Pi&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;download-the-hypriot-docker-sd-card-image:f9c6c9c0ab05c0ca238dff8f082f6e17&#34;&gt;Download the Hypriot Docker SD card image&lt;/h3&gt;

&lt;p&gt;Download our latest SD card image from the &lt;a href=&#34;http://blog.hypriot.com/downloads/&#34;&gt;download page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next go to your &lt;strong&gt;Download&lt;/strong&gt; folder and extract the downloaded zip file by right-clicking on the file and then clicking on &lt;strong&gt;7-zip&lt;/strong&gt; -&amp;gt; &lt;strong&gt;extract here&amp;hellip;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;After 7-zip is finished with extracting you will have a file with a &lt;strong&gt;.img&lt;/strong&gt; extension.
In the next step we will flash this file onto your SD card.&lt;/p&gt;

&lt;h3 id=&#34;flash-the-downloaded-image-to-your-sd-card:f9c6c9c0ab05c0ca238dff8f082f6e17&#34;&gt;Flash the downloaded image to your SD card&lt;/h3&gt;

&lt;p&gt;To start the flashing process right-click on the &lt;em&gt;Win32 Disk Imager&lt;/em&gt; application which we installed earlier and click on &lt;em&gt;Run as administrator&lt;/em&gt;. You will see a window asking for permissions. Grant them.&lt;/p&gt;

&lt;p&gt;Now, with the &lt;em&gt;Win32 Disk Imager&lt;/em&gt;&amp;rsquo;s window opened, click on the blue folder icon and choose the Hypriot SD card image in your &lt;em&gt;Download&lt;/em&gt; folder.&lt;/p&gt;

&lt;p&gt;Next to the blue folder button, you will find a dropdown menu in which you can select your SD card.
To double check the device letter open your Windows Explorer and locate the SD card drive.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/windows-screenies/image-writer-opened.png&#34; alt=&#34;image-writer&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Finally click on &lt;strong&gt;write&lt;/strong&gt; which will flash the SD card image to the SD card.&lt;/p&gt;

&lt;p&gt;Upon completion close &lt;em&gt;Win32 Disk Imager&lt;/em&gt; and eject the SD card before removing it from its slot.
In order to eject the SD card use the &lt;em&gt;secure eject&lt;/em&gt; function in the menu next to your system clock.
This is usually in the very bottom right corner of your screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/windows-screenies/eject-sd-card.png&#34; alt=&#34;eject-sd&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;start-your-raspberry-pi-with-the-sd-card:f9c6c9c0ab05c0ca238dff8f082f6e17&#34;&gt;Start your Raspberry Pi with the SD card&lt;/h3&gt;

&lt;p&gt;Boot your Raspberry Pi by&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;connecting the Raspberry Pi to your local network via an ethernet cable&lt;/li&gt;
&lt;li&gt;putting the SD card into the designated slot&lt;/li&gt;
&lt;li&gt;plugging in the power adapter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After finishing the last step your Raspberry Pi will boot and the LEDs should start blinking.
The very first boot will take one to three minutes as the file system will be resized.&lt;/p&gt;

&lt;h3 id=&#34;ensure-everything-works:f9c6c9c0ab05c0ca238dff8f082f6e17&#34;&gt;Ensure everything works&lt;/h3&gt;

&lt;p&gt;To check if Docker is actually running we need to log into the Raspberry Pi via &lt;em&gt;PuTTY&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To do this we need to find out the IP address of your Raspberry Pi first.
This can be done with &lt;em&gt;Zenmap&lt;/em&gt; which we installed earlier.&lt;/p&gt;

&lt;p&gt;After starting &lt;em&gt;Zenmap&lt;/em&gt; look for the field &lt;em&gt;Command&lt;/em&gt;.
Type the following command into this field but replace the IP address in front of &lt;code&gt;/24&lt;/code&gt; with your own and hit &lt;em&gt;Enter&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nmap -sP 192.168.0.100/24
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As a result you should see this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/windows-screenies/zenmap-scan-result.PNG&#34; alt=&#34;zenmap-scan-result&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Zenmap&lt;/em&gt; list all active hosts within your local network.
In order to find the Raspberry Pi click the button &lt;em&gt;filter hosts&lt;/em&gt; at the bottom of the &lt;em&gt;Zenmap&lt;/em&gt; and type in &lt;em&gt;black&lt;/em&gt;.
Now the first line of the list should show the IP address of your Raspberry Pi.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/windows-screenies/zenmap-with-filter-with-marker.png&#34; alt=&#34;zenmap-with-filter-with-marker&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Since we now know where to find the Raspberry Pi within your network it is time to start &lt;em&gt;PuTTY&lt;/em&gt; to establish a SSH connection to your Raspberry Pi.&lt;/p&gt;

&lt;p&gt;After starting &lt;em&gt;PuTTY&lt;/em&gt; type in the IP address we determined into the field &lt;em&gt;Host Name&lt;/em&gt;. With a click on the button &lt;em&gt;Open&lt;/em&gt; the connection will be established.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/windows-screenies/putty-window-settings.png&#34; alt=&#34;Screenshot-putty-login&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;In the new window which just opened type &lt;code&gt;pirate&lt;/code&gt; as login name and hit &lt;em&gt;Enter&lt;/em&gt;. Next you will be asked for a password. Type &lt;code&gt;hypriot&lt;/code&gt; and hit &lt;em&gt;Enter&lt;/em&gt; again.&lt;/p&gt;

&lt;p&gt;If everything went fine you should now see the &lt;em&gt;HypriotOS&lt;/em&gt; command line prompt waiting for your input. It should look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/windows-screenies/putty-window-login.png&#34; alt=&#34;putty-window-login&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Finally to check if the Docker service is running type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker info
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output of the &lt;code&gt;docker info&lt;/code&gt; command should look similar to:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.eu-central-1.amazonaws.com/assets.hypriot.com/blog_post_getting-started/windows-screenies/putty-window-docker-info.png&#34; alt=&#34;docker-info&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congratulations! You have succeeded in getting Docker running on your Raspberry Pi!&lt;/strong&gt; :)&lt;/p&gt;

&lt;p&gt;You are now ready to continue your exploration of Docker with our &lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device#going-wild-with-docker-what-can-you-actually-do-with-it:397c66ef19f9f061b6711d2e296cb276&#34;&gt;Getting Started Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have fun!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Brand new Getting-Started guide for Docker on the Raspberry Pi</title>
      <link>http://blog.hypriot.com/post/brand-new-getting-started-guide/</link>
      <pubDate>Fri, 15 May 2015 12:35:44 +0200</pubDate>
      
      <guid>http://blog.hypriot.com/post/brand-new-getting-started-guide/</guid>
      <description>&lt;p&gt;The last couple of days Mathias Renner and I were busy creating a comprehensive &lt;a href=&#34;http://blog.hypriot.com/getting-started&#34;&gt;Getting Started guide for Docker on the Raspberry Pi&lt;/a&gt;.
Our goal was to give users easy to understand step by step instructions on how to get Docker running on a Raspberry Pi.&lt;/p&gt;

&lt;p&gt;Actually - in the end - we came up with three guides. :)&lt;/p&gt;

&lt;p&gt;Based on our HypriotOS SD card image we show Mac, Linux and Windows users individually how to use it on their operating system.
Downloading, flashing and booting up the SD card image on your Raspberry Pi is now easy as pie.&lt;/p&gt;

&lt;p&gt;There are no excuses anymore not to try it - even for novice Raspberry Pi &amp;amp; Docker users.&lt;/p&gt;

&lt;p&gt;Hopefully we get lots of feedback to make the guides even better!&lt;/p&gt;

&lt;p&gt;Have fun!&lt;/p&gt;

&lt;p&gt;Govinda &amp;amp; Mathias&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stay on the cutting edge with Docker 1.6 and test drive it on your Raspberry Pi today</title>
      <link>http://blog.hypriot.com/post/docker-1-dot-6-release-candidate-ready-for-arm/</link>
      <pubDate>Tue, 31 Mar 2015 20:00:00 +0200</pubDate>
      
      <guid>http://blog.hypriot.com/post/docker-1-dot-6-release-candidate-ready-for-arm/</guid>
      <description>

&lt;p&gt;If you like to stay on the cutting edge of things as much as we do you will be happy to hear that there is an easy way to test drive Docker 1.6 RC2 on your Raspberry Pi.&lt;/p&gt;

&lt;h3 id=&#34;what-do-you-get-with-docker-1-6:0dae4ec28729ab061bcaeb3432f04165&#34;&gt;What do you get with Docker 1.6?&lt;/h3&gt;

&lt;p&gt;Docker 1.6 will bring a couple of new features, changes and bugfixes.&lt;/p&gt;

&lt;p&gt;The ones that stand out the most are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;syslog support for the Docker logs&lt;/li&gt;
&lt;li&gt;setting of ulimits for container&lt;/li&gt;
&lt;li&gt;building images from an image id&lt;/li&gt;
&lt;li&gt;pulling images based on id&lt;/li&gt;
&lt;li&gt;Windows client support (&lt;a href=&#34;https://kitematic.com&#34;&gt;Kitematic&lt;/a&gt; - &lt;em&gt;I finally see it coming together!&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Labels for container and images&lt;/li&gt;
&lt;li&gt;ability to set constraints on images - memory, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find out more details in the &lt;a href=&#34;https://github.com/docker/docker/blob/v1.6.0-rc2/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt; yourself.&lt;/p&gt;

&lt;p&gt;The only prerequisite to get started is that you are using our Hypriot SD card image for the Rasperry Pi. We published a new version just yesterday and you can the blog post about it here: &lt;a href=&#34;http://blog.hypriot.com/post/hypriotos-back-again-with-docker-on-arm&#34;&gt;HypriotOS: Back Again and Better then Ever&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;get-it-while-it-is-still-hot:0dae4ec28729ab061bcaeb3432f04165&#34;&gt;Get it while it is still hot&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc2-1_armhf.deb&#34;&gt;docker-hypriot_1.6.0-rc2-1_armhf.deb&lt;/a&gt; (~ 6MB)&lt;br /&gt;
&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc2-1_armhf.deb.sha256&#34;&gt;SHA256 checksum&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All you have to do is to start up your Pi with our SD card image, download the prepared Docker package and install it with dpkg.&lt;/p&gt;

&lt;p&gt;

HypriotOS: root@black-pearl in ~
$ wget http://downloads.hypriot.com/docker-hypriot_1.6.0-rc2-1_armhf.deb

HypriotOS: root@black-pearl in ~
$ dpkg -i docker-hypriot_1.6.0-rc2-1_armhf.deb

&lt;/p&gt;

&lt;p&gt;Afterwards you should be able to quench your curiosity by playing with this shiny new toy.
This is not yet a stable release so let us know what you think! And by the way - you can find older versions of Docker as Debian packages in our &lt;a href=&#34;http://blog.hypriot.com/downloads/&#34;&gt;Download-Area&lt;/a&gt;.
Installing a new version replaces the existing one and thus makes it possible to switch versions without breaking a sweat.&lt;/p&gt;

&lt;p&gt;Have fun.&lt;/p&gt;

&lt;h3 id=&#34;update-01-04-2015-get-docker-1-6-0-rc3:0dae4ec28729ab061bcaeb3432f04165&#34;&gt;Update 01.04.2015: Get Docker 1.6.0 RC3&lt;/h3&gt;

&lt;p&gt;Two hours ago the Docker team released another release candidate, so we&amp;rsquo;ve cooked it for you.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc3-1_armhf.deb&#34;&gt;docker-hypriot_1.6.0-rc3-1_armhf.deb&lt;/a&gt; (~ 6MB)&lt;br /&gt;
&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc3-1_armhf.deb.sha256&#34;&gt;SHA256 checksum&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;update-03-04-2015-get-docker-1-6-0-rc4:0dae4ec28729ab061bcaeb3432f04165&#34;&gt;Update 03.04.2015: Get Docker 1.6.0 RC4&lt;/h3&gt;

&lt;p&gt;Well, this time it is already 11 hours since it was published. But still here is the lastest and greatest.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc4-1_armhf.deb&#34;&gt;docker-hypriot_1.6.0-rc4-1_armhf.deb&lt;/a&gt; (~ 6MB)&lt;br /&gt;
&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc4-1_armhf.deb.sha256&#34;&gt;SHA256 checksum&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;update-12-04-2015-get-docker-1-6-0-rc5:0dae4ec28729ab061bcaeb3432f04165&#34;&gt;Update 12.04.2015: Get Docker 1.6.0 RC5&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc5-1_armhf.deb&#34;&gt;docker-hypriot_1.6.0-rc5-1_armhf.deb&lt;/a&gt; (~ 6MB)&lt;br /&gt;
&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc5-1_armhf.deb.sha256&#34;&gt;SHA256 checksum&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;update-14-04-2015-get-docker-1-6-0-rc6:0dae4ec28729ab061bcaeb3432f04165&#34;&gt;Update 14.04.2015: Get Docker 1.6.0 RC6&lt;/h3&gt;

&lt;p&gt;Maybe this could be the last release candidate before a final 1.6.0 release.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc6-1_armhf.deb&#34;&gt;docker-hypriot_1.6.0-rc6-1_armhf.deb&lt;/a&gt; (~ 6MB)&lt;br /&gt;
&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc6-1_armhf.deb.sha256&#34;&gt;SHA256 checksum&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;update-15-04-2015-get-docker-1-6-0-rc7:0dae4ec28729ab061bcaeb3432f04165&#34;&gt;Update 15.04.2015: Get Docker 1.6.0 RC7&lt;/h3&gt;

&lt;p&gt;OK, here is the next 1.6.0 release candidate.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc7-1_armhf.deb&#34;&gt;docker-hypriot_1.6.0-rc7-1_armhf.deb&lt;/a&gt; (~ 6MB)&lt;br /&gt;
&lt;a href=&#34;http://downloads.hypriot.com/docker-hypriot_1.6.0-rc7-1_armhf.deb.sha256&#34;&gt;SHA256 checksum&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HypriotOS: Back Again and Better then Ever</title>
      <link>http://blog.hypriot.com/post/hypriotos-back-again-with-docker-on-arm/</link>
      <pubDate>Mon, 30 Mar 2015 00:00:00 +0200</pubDate>
      
      <guid>http://blog.hypriot.com/post/hypriotos-back-again-with-docker-on-arm/</guid>
      <description>

&lt;p&gt;Time is running and it is nearly a month since we released our last ARM Docker SD card image for the Raspberry Pi.
Listening to our users and having some ideas of our own we are back again with our latest version of HypriotOS.&lt;/p&gt;

&lt;p&gt;We dubbed it &amp;ldquo;&lt;strong&gt;Jack&lt;/strong&gt;&amp;rdquo; as every proper software release should have a fitting &lt;a href=&#34;http://royal.pingdom.com/2010/05/27/the-developer-obsession-with-code-names-114-interesting-examples/&#34;&gt;code name&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;summary-of-changes:3dc6f6d2f6296024232980f87970ab3c&#34;&gt;Summary of Changes&lt;/h2&gt;

&lt;p&gt;Jack brings along a host of new features&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;an upgrade of the Linux kernel from 3.18.8 to &lt;strong&gt;3.18.10&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;support for &lt;a href=&#34;http://openvswitch.org/&#34;&gt;Open vSwitch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;support for &lt;strong&gt;network hotplugging&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;out of the box support for &lt;strong&gt;Wifi&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;support for &lt;strong&gt;Avahi&lt;/strong&gt; (aka Apple Bonjour)&lt;/li&gt;
&lt;li&gt;more inodes to allow for more files in the filesystem&lt;/li&gt;
&lt;li&gt;some smaller improvements/additions: fake-hwclock, usbutils, htop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of these feature deserve a more thorough explanation.&lt;/p&gt;

&lt;h3 id=&#34;open-vswitch-support:3dc6f6d2f6296024232980f87970ab3c&#34;&gt;Open vSwitch support&lt;/h3&gt;

&lt;p&gt;Check out this cool video &lt;a href=&#34;https://www.youtube.com/watch?v=sBy0NVBPc9g&#34;&gt;Running Open vSwitch on Docker&lt;/a&gt; from Dave Tucker as an introduction to Docker and Open vSwitch.
We added the foundation for using Open vSwitch by adding the necessary kernel support into our image.&lt;/p&gt;

&lt;p&gt;You can see for yourself by typing the following&lt;/p&gt;

&lt;p&gt;
HypriotOS: root@black-pearl in ~
$ modprobe openvswitch
HypriotOS: root@black-pearl in ~
$ lsmod | grep openvswitch
openvswitch            68194  0
vxlan                  29211  1 openvswitch
gre                     4069  1 openvswitch

&lt;/p&gt;

&lt;p&gt;Be aware that you still need a working Open vSwitch Docker image that works for ARM.
If nobody else is faster we might provide one soon ourselves!&lt;/p&gt;

&lt;h3 id=&#34;improved-networking-support:3dc6f6d2f6296024232980f87970ab3c&#34;&gt;Improved Networking Support&lt;/h3&gt;

&lt;h4 id=&#34;hotplug:3dc6f6d2f6296024232980f87970ab3c&#34;&gt;Hotplug&lt;/h4&gt;

&lt;p&gt;To make the networking with our image a smoother experience we added hotplug support for networking devices.
This allows you to add for instance a USB Wifi Dongle and it will be recognized by your Pi at once.&lt;/p&gt;

&lt;p&gt;You can check if it worked by using &lt;strong&gt;lsusb&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;

$ lsusb
Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp.
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp.
Bus 001 Device 004: ID 0bda:8178 Realtek Semiconductor Corp. RTL8192CU 802.11n WLAN Adapter
&lt;/p&gt;

&lt;h4 id=&#34;wifi:3dc6f6d2f6296024232980f87970ab3c&#34;&gt;Wifi&lt;/h4&gt;

&lt;p&gt;One of the most asked for features regarding our SD image was the support of Wifi.&lt;/p&gt;

&lt;p&gt;The easiest way to get started with Wifi is on Mac with our &lt;a href=&#34;https://github.com/hypriot/flash&#34;&gt;flash script&lt;/a&gt;.
This script does not only allow you to set Wifi configuration but it also allows you to fetch, configure and flash the SD card in one go.&lt;/p&gt;

&lt;p&gt;

flash --ssid Your-Wifi-SID --password Your-Wifi-Password http://downloads.hypriot.com/hypriot-rpi-20150329-140334.img.zip

&lt;/p&gt;

&lt;p&gt;If you cannot use our nifty flash tool you have to first boot your Pi with a network cable attached.
Then you can add your Wifi credentials in &lt;code&gt;/boot/occidentalis.txt&lt;/code&gt; as described in the &lt;a href=&#34;https://github.com/hypriot/flash#occidentalistxt&#34;&gt;Readme&lt;/a&gt; of the flash tool.
Afterwards run &lt;code&gt;occi&lt;/code&gt; at the command line and reboot.&lt;/p&gt;

&lt;p&gt;After rebooting you should see a wlan-interface with an ip address assigned similar to this:&lt;/p&gt;

&lt;p&gt;

$ ip a
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN qlen 1000
    link/ether b8:27:eb:c0:df:1a brd ff:ff:ff:ff:ff:ff
    inet 192.168.178.83/24 brd 192.168.178.255 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::ba27:ebff:fec0:df1a/64 scope link
       valid_lft forever preferred_lft forever
3: wlan0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP qlen 1000
    link/ether e8:4e:06:0b:bf:d8 brd ff:ff:ff:ff:ff:ff
    inet 192.168.178.144/24 brd 192.168.178.255 scope global wlan0
       valid_lft forever preferred_lft forever
    inet6 fe80::ea4e:6ff:fe0b:bfd8/64 scope link
       valid_lft forever preferred_lft forever
4: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN
    link/ether 56:84:7a:fe:97:99 brd ff:ff:ff:ff:ff:ff
    inet 172.17.42.1/16 scope global docker0
       valid_lft forever preferred_lft forever

&lt;/p&gt;

&lt;h3 id=&#34;support-for-avahi-bonjour:3dc6f6d2f6296024232980f87970ab3c&#34;&gt;Support for Avahi/Bonjour&lt;/h3&gt;

&lt;p&gt;One of the major problems after booting your Pi always was how to find out its IP address.
There are many approaches to solve this problem but one of the easiest is with the help of &lt;a href=&#34;http://de.wikipedia.org/wiki/Avahi_(Software&#34;&gt;Avahi&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now after booting up our SD card image you can just ssh into your Pi without finding out the IP address first.&lt;/p&gt;

&lt;p&gt;
$ ssh root@black-pearl.local
root@black-pearl.local&#39;s password:
Linux black-pearl 3.18.10-hypriotos-v7+ #2 SMP PREEMPT Sun Mar 29 13:13:41 UTC 2015 armv7l

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sun Mar 29 23:49:43 2015 from macbook
HypriotOS: root@black-pearl in ~
$
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;black-pearl&lt;/strong&gt; is the standard hostname your Pi gets after booting with our image.&lt;/p&gt;

&lt;p&gt;This out of the box experience is once again unfortunately only for Mac users.
Linux and Windows users need to install additional software first.&lt;/p&gt;

&lt;p&gt;Linux users need to install the Avahi daemon. For Ubuntu it works like this&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get install avahi-daemon&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Windows users need to install &lt;a href=&#34;https://www.apple.com/de/itunes/download/&#34;&gt;iTunes&lt;/a&gt; as Bonjour/Avahi comes bundles with it.&lt;/p&gt;

&lt;h2 id=&#34;download:3dc6f6d2f6296024232980f87970ab3c&#34;&gt;Download&lt;/h2&gt;

&lt;p&gt;The new image can be downloaded here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://downloads.hypriot.com/hypriot-rpi-20150329-140334.img.zip&#34;&gt;Docker-Pi Image&lt;/a&gt; (~367MB)&lt;br /&gt;
&lt;a href=&#34;http://downloads.hypriot.com/hypriot-rpi-20150329-140334.img.zip.sha256&#34;&gt;SHA256 checksum&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;how-to-get-started:3dc6f6d2f6296024232980f87970ab3c&#34;&gt;How to get started&lt;/h2&gt;

&lt;p&gt;Download our SD card image and flash it on your own SD card. &lt;a href=&#34;http://computers.tutsplus.com/articles/how-to-flash-an-sd-card-for-raspberry-pi--mac-53600&#34;&gt;Here&lt;/a&gt; is a short guide on how to do this for Mac, Windows and Linux users. Afterwards insert the SD card in your Raspberry Pi and wait while it boots. The first time will take a little longer as it resizes the file system to its maximum and reboots again.&lt;/p&gt;

&lt;p&gt;At the boot prompt log in with user &amp;ldquo;&lt;strong&gt;pi&lt;/strong&gt;&amp;rdquo; and password &amp;ldquo;&lt;strong&gt;raspberry&lt;/strong&gt;&amp;rdquo; (or with a privileged user &amp;ldquo;root&amp;rdquo; and password &amp;ldquo;hypriot&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;One thing that is still worth mentioning is that you need special ARM-compatible Docker Images.
&lt;strong&gt;Standard x86-64 Docker Images from the Docker Hub won&amp;rsquo;t work&lt;/strong&gt;. That&amp;rsquo;s the reason why we&amp;rsquo;ve created a number of ARM compatible Docker Images to get you started. Wether you prefer Java, Python, Node.js or io.js - we have you covered!&lt;/p&gt;

&lt;p&gt;You can find these images and more at &lt;a href=&#34;https://registry.hub.docker.com/repos/hypriot/&#34;&gt;our place&lt;/a&gt; on the Docker Hub. After booting our image on your Pi these base images are just a &amp;ldquo;docker pull&amp;rdquo; away. For example &amp;ldquo;docker pull hypriot/rpi-node&amp;rdquo;.&lt;/p&gt;

&lt;h2 id=&#34;give-us-your-feedback:3dc6f6d2f6296024232980f87970ab3c&#34;&gt;Give us your feedback&lt;/h2&gt;

&lt;p&gt;As we want to make this image even better we really need your feedback. What do you like about our SD card image and what could be made better? And what kind of additional Docker Images would you like to see?&lt;/p&gt;

&lt;p&gt;Tell us via Twitter, HackerNews or in the comments!
And please share this post with your friends.&lt;/p&gt;

&lt;p&gt;We really would like to see more people using Docker on Raspberries as we think they make a really hot combo:
Low-cost instant access to Docker awesomeness on your Raspberry Pi.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Heavily ARMed after major upgrade: Raspberry Pi with Docker 1.5.0</title>
      <link>http://blog.hypriot.com/post/heavily-armed-after-major-upgrade-raspberry-pi-with-docker-1-dot-5-0/</link>
      <pubDate>Tue, 03 Mar 2015 22:09:33 +0100</pubDate>
      
      <guid>http://blog.hypriot.com/post/heavily-armed-after-major-upgrade-raspberry-pi-with-docker-1-dot-5-0/</guid>
      <description>

&lt;p&gt;Nearly two weeks ago we have been blown away by the positive feedback we got for &lt;a href=&#34;http://blog.hypriot.com/kick-ass-raspberry-pi-2-having-a-forbidden-love-affair-with-docker-1-dot-4-1&#34;&gt;our first Raspberry Pi SD card image&lt;/a&gt;. It allowed people to get up and running with Docker on the Raspberry Pi in no time.&lt;/p&gt;

&lt;p&gt;The positive feedback we received and the fact that two days later Docker 1.5.0 was released did motivate us to create an improved version of our Get-Docker-Up-And-Running-On-Your-Pi-In-No-Time SD card image.&lt;/p&gt;

&lt;p&gt;&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34; class=&#34;clearfix&#34;&gt;
  &lt;img src=&#34;http://assets.hypriot.com/gallery/heavily-armed-after-major-upgrade/black-pearl.jpg&#34; alt=&#34;&#34; /&gt;

  
  &lt;figcaption style=&#34;height: 1rem;&#34;&gt;
    
    &lt;span style=&#34;float: right;&#34;&gt;&lt;a href=&#34;http://www.kevinboone.net/black_pearl.html&#34;&gt;Kevin Boone&lt;/a&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  

&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;The most important upgrade of our second image is the support for Docker 1.5.0 which has been released just recently. Most noteworthy about Docker 1.5.0 is the new support for IPv6, read-only containers and advanced statistics for image resource consumption. We find the last one especially interesting for people like us who are running Docker on small devices.&lt;/p&gt;

&lt;p&gt;One thing we already had in the last incarnation of our image is the support of OverlayFS. OverlayFS is one of several storage drivers for Docker. The biggest distinction to other storage options, like lvm or btrfs, is the performance it offers. See this &lt;a href=&#34;https://developerblog.redhat.com/2014/09/30/overview-storage-scalability-docker/&#34;&gt;website&lt;/a&gt; for an in-depth-look at the performance/advantages of different docker storage options.
Needless to say that OverlayFS comes out at the top. Even the big players like &lt;a href=&#34;http://lwn.net/Articles/627232/&#34;&gt;CoreOS&lt;/a&gt; seem to be in the process of moving to OverlayFS. We can provide OverlayFS in our image because with 3.18.8 we are using the latest linux kernel version which already has built-in support for OverlayFS.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;gallery clearfix&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Raspberry Pi with Docker&lt;/div&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://assets.hypriot.com/gallery/heavily-armed-after-major-upgrade/hypriot-pi-01.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1008&#34;&gt;
      &lt;img src=&#34;http://assets.hypriot.com/gallery/heavily-armed-after-major-upgrade/thumbnails/thumb_hypriot-pi-01.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;Modern Kernel build for Docker&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Modern Kernel build for Docker
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://assets.hypriot.com/gallery/heavily-armed-after-major-upgrade/hypriot-pi-02.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1008&#34;&gt;
      &lt;img src=&#34;http://assets.hypriot.com/gallery/heavily-armed-after-major-upgrade/thumbnails/thumb_hypriot-pi-02.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;Output of &amp;#39;docker version&amp;#39;&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Output of &amp;#39;docker version&amp;#39;
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://assets.hypriot.com/gallery/heavily-armed-after-major-upgrade/hypriot-pi-03.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1008&#34;&gt;
      &lt;img src=&#34;http://assets.hypriot.com/gallery/heavily-armed-after-major-upgrade/thumbnails/thumb_hypriot-pi-03.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;Output of &amp;#39;docker info&amp;#39;&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Output of &amp;#39;docker info&amp;#39;
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://assets.hypriot.com/gallery/heavily-armed-after-major-upgrade/hypriot-pi-04.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1008&#34;&gt;
      &lt;img src=&#34;http://assets.hypriot.com/gallery/heavily-armed-after-major-upgrade/thumbnails/thumb_hypriot-pi-04.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;Output of &amp;#39;docker images&amp;#39;&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Output of &amp;#39;docker images&amp;#39;
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;http://blog.hypriot.com/css/photoswipe.css&#34;&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;http://blog.hypriot.com/css/default-skin/default-skin.css&#34;&gt;
&lt;script src=&#34;http://blog.hypriot.com/js/photoswipe.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://blog.hypriot.com/js/photoswipe-ui-default.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://blog.hypriot.com/js/initphotoswipe.js&#34;&gt;&lt;/script&gt;



&lt;div class=&#34;pswp&#34; tabindex=&#34;-1&#34; role=&#34;dialog&#34; aria-hidden=&#34;true&#34;&gt;

&lt;div class=&#34;pswp__bg&#34;&gt;&lt;/div&gt;

&lt;div class=&#34;pswp__scroll-wrap&#34;&gt;
    
    &lt;div class=&#34;pswp__container&#34;&gt;
      &lt;div class=&#34;pswp__item&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;pswp__item&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;pswp__item&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    
    &lt;div class=&#34;pswp__ui pswp__ui--hidden&#34;&gt;
    &lt;div class=&#34;pswp__top-bar&#34;&gt;
      
      &lt;div class=&#34;pswp__counter&#34;&gt;&lt;/div&gt;
      &lt;button class=&#34;pswp__button pswp__button--close&#34; title=&#34;Close (Esc)&#34;&gt;&lt;/button&gt;
      &lt;button class=&#34;pswp__button pswp__button--share&#34; title=&#34;Share&#34;&gt;&lt;/button&gt;
      &lt;button class=&#34;pswp__button pswp__button--fs&#34; title=&#34;Toggle fullscreen&#34;&gt;&lt;/button&gt;
      &lt;button class=&#34;pswp__button pswp__button--zoom&#34; title=&#34;Zoom in/out&#34;&gt;&lt;/button&gt;
      
      
      &lt;div class=&#34;pswp__preloader&#34;&gt;
        &lt;div class=&#34;pswp__preloader__icn&#34;&gt;
          &lt;div class=&#34;pswp__preloader__cut&#34;&gt;
            &lt;div class=&#34;pswp__preloader__donut&#34;&gt;&lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;pswp__share-modal pswp__share-modal--hidden pswp__single-tap&#34;&gt;
      &lt;div class=&#34;pswp__share-tooltip&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;button class=&#34;pswp__button pswp__button--arrow--left&#34; title=&#34;Previous (arrow left)&#34;&gt;
    &lt;/button&gt;
    &lt;button class=&#34;pswp__button pswp__button--arrow--right&#34; title=&#34;Next (arrow right)&#34;&gt;
    &lt;/button&gt;
    &lt;div class=&#34;pswp__caption&#34;&gt;
      &lt;div class=&#34;pswp__caption__center&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;style&gt;
    .gallery {  }
    .gallery img { width: 100%; height: auto; }
    .gallery figure { display: block; float: left; margin: 0 5px 5px 0; width: 200px; }
    .gallery figcaption { display: none; }
    .gallery div.title { font-weight: bold; }
    span[itemprop=&#34;copyrightHolder&#34;] { color : #888; float: right; }
    span[itemprop=&#34;copyrightHolder&#34;]:before { content: &#34;Foto: &#34;; }
    img[itemprop=&#34;thumbnail&#34;]{ width: 200px; }
&lt;/style&gt;


&lt;script&gt;initPhotoSwipeFromDOM(&#39;.gallery&#39;);&lt;/script&gt;
&lt;/p&gt;

&lt;h2 id=&#34;summary-of-changes:3455e8c2e00ddc235c73ff691ea5d2cc&#34;&gt;Summary of changes&lt;/h2&gt;

&lt;p&gt;Here is a list of the most important changes to the SD card image.&lt;/p&gt;

&lt;p&gt;We &amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;upgraded the linux kernel from 3.18.6 to &lt;em&gt;3.18.8&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;added kernel headers to support compilation of custom modules&lt;/li&gt;
&lt;li&gt;upgraded from Docker 1.4.1 to &lt;em&gt;1.5.0&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;added support for using a &lt;a href=&#34;https://learn.adafruit.com/adafruits-raspberry-pi-lesson-5-using-a-console-cable/overview&#34;&gt;USB to TTL serial console cable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;added bash completion for Docker commands&lt;/li&gt;
&lt;li&gt;lots of smaller fixes and improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides that we kept some features which were already awesome&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the image is based on Raspbian Wheezy&lt;/li&gt;
&lt;li&gt;support for OverlayFS by default&lt;/li&gt;
&lt;li&gt;support for Raspberry Pi 1 &amp;amp; 2 with the same SD card image (dual kernel)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;download:3455e8c2e00ddc235c73ff691ea5d2cc&#34;&gt;Download&lt;/h2&gt;

&lt;p&gt;The image can be downloaded here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://downloads.hypriot.com/hypriot-rpi-20150301-140537.img.zip&#34;&gt;Docker-Pi Image&lt;/a&gt; (~347MB)&lt;br /&gt;
&lt;a href=&#34;http://downloads.hypriot.com/hypriot-rpi-20150301-140537.img.zip.sha256&#34;&gt;SHA256 checksum&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update (30.03.2015):&lt;/strong&gt; We have published a more &lt;a href=&#34;http://blog.hypriot.com/post/hypriotos-back-again-with-docker-on-arm&#34;&gt;recent version of our SD card image&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;how-to-get-started:3455e8c2e00ddc235c73ff691ea5d2cc&#34;&gt;How to get started&lt;/h2&gt;

&lt;p&gt;Download our SD card image and flash it on your own SD card. &lt;a href=&#34;http://computers.tutsplus.com/articles/how-to-flash-an-sd-card-for-raspberry-pi--mac-53600&#34;&gt;Here&lt;/a&gt; is a short guide on how to do this for Mac, Windows and Linux users. Afterwards insert the SD card in your Raspberry Pi and wait while it boots. The first time will take a little longer as it resizes the file system to its maximum and reboots again.&lt;/p&gt;

&lt;p&gt;At the boot prompt log in with user &amp;ldquo;pi&amp;rdquo; and password &amp;ldquo;raspberry&amp;rdquo; (or with a privileged user &amp;ldquo;root&amp;rdquo; and password &amp;ldquo;hypriot&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;One thing that is still worth mentioning is that you need special ARM-compatible Docker Images.
Standard x86-64 Docker Images from the Docker Hub won&amp;rsquo;t work. That&amp;rsquo;s the reason why we&amp;rsquo;ve created a number of ARM compatible Docker Images to get you started. Wether you prefer Java, Python, Node.js or io.js - we have you covered!&lt;/p&gt;

&lt;p&gt;You will find these images and more at our place on the Docker Hub. After booting our image on your Pi these base images are just a &amp;ldquo;docker pull&amp;rdquo; away. For example &amp;ldquo;docker pull hypriot/rpi-node&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;As you can see - getting started with Docker on your Raspberry Pi just got so much easier!&lt;/p&gt;

&lt;h2 id=&#34;give-us-your-feedback:3455e8c2e00ddc235c73ff691ea5d2cc&#34;&gt;Give us your feedback&lt;/h2&gt;

&lt;p&gt;As we want to make this image even better we really need your feedback. What do you like about our SD card image and what could be made better? And what kind of additional Docker Images would you like to see?&lt;/p&gt;

&lt;p&gt;Tell us via Twitter, HackerNews or in the comments!
And please share this post with your friends.&lt;/p&gt;

&lt;p&gt;We really would like to see more people using Docker on Raspberries as we think they make a really hot combo:
Low-cost instant access to Docker awesomeness on your Raspberry Pi.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
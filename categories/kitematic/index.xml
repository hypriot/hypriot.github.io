<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kitematic on Docker Pirates ARMed with explosive stuff</title>
    <link>https://blog.hypriot.com/categories/kitematic/</link>
    <description>Recent content in Kitematic on Docker Pirates ARMed with explosive stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Oct 2015 00:15:00 +0200</lastBuildDate>
    <atom:link href="https://blog.hypriot.com/categories/kitematic/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A touch of magic: Controlling Kitematic &amp; Docker with a touch display on the Raspberry Pi</title>
      <link>https://blog.hypriot.com/post/a-touch-of-magic-controlling-kitematic-with-a-touch-display-on-the-raspberry-pi/</link>
      <pubDate>Mon, 12 Oct 2015 00:15:00 +0200</pubDate>
      
      <guid>https://blog.hypriot.com/post/a-touch-of-magic-controlling-kitematic-with-a-touch-display-on-the-raspberry-pi/</guid>
      <description>&lt;p&gt;We have recently released our &lt;a href=&#34;https://blog.hypriot.com/post/get-your-all-in-one-docker-playground-now-hypriotos-reloaded/&#34;&gt;new SD card image&lt;/a&gt; called &lt;strong&gt;Will&lt;/strong&gt;.
It is the ultimate Docker playground with Docker Engine, Docker Compose, Docker Swarm and Docker Machine preinstalled.
This image now also supports the new 7&amp;rdquo; Raspberry Pi Touch Display out-of-the-box. So we thought, wouldn&amp;rsquo;t it be cool to have Kitematic running directly on your Raspberry Pi? And yes, we did it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.hypriot.com/images/kitematic-on-pi/teaser.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;While polishing and testing &lt;strong&gt;Will&lt;/strong&gt; the idea came up that it would be awesome to be able to use Kitematic on the new great &lt;a href=&#34;https://www.raspberrypi.org/blog/the-eagerly-awaited-raspberry-pi-display/&#34;&gt;7&amp;rdquo; touch display of the Raspberry Pi foundation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We started using the &lt;a href=&#34;https://github.com/zedtux/kitematic/tree/linux-support&#34;&gt;Linux support branch&lt;/a&gt; of Kitematic (&lt;a href=&#34;https://github.com/kitematic/kitematic/pull/696&#34;&gt;PR #696&lt;/a&gt;) and tried to compile it.
After some fiddling we got the first build working. Still in the team we were not satisfied with installing Kitematic directly on the host - we wanted a better way.
This was the time for the next crazy idea. We thought, let us write a &lt;code&gt;Dockerfile&lt;/code&gt; to build Kitematic and run it within a Docker container.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;gallery clearfix&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Kitematic running on the Raspberry Pi&lt;/div&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;https://blog.hypriot.com/images/kitematic-on-pi/docker-toolbox.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1200&#34;&gt;
      &lt;img src=&#34;https://blog.hypriot.com/images/kitematic-on-pi/thumbnails/thumb_docker-toolbox.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;Unboxing the Docker Toolbox&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Unboxing the Docker Toolbox
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;https://blog.hypriot.com/images/kitematic-on-pi/display-back.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1200&#34;&gt;
      &lt;img src=&#34;https://blog.hypriot.com/images/kitematic-on-pi/thumbnails/thumb_display-back.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;The RPi 2 is attached to 7 inch Raspberry Pi Display&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    The RPi 2 is attached to 7 inch Raspberry Pi Display
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;https://blog.hypriot.com/images/kitematic-on-pi/connect-to-docker-hub.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1200&#34;&gt;
      &lt;img src=&#34;https://blog.hypriot.com/images/kitematic-on-pi/thumbnails/thumb_connect-to-docker-hub.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;Connect to the Docker Hub&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Connect to the Docker Hub
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;https://blog.hypriot.com/images/kitematic-on-pi/kitematic.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1200&#34;&gt;
      &lt;img src=&#34;https://blog.hypriot.com/images/kitematic-on-pi/thumbnails/thumb_kitematic.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;List of Docker Images&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    List of Docker Images
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;https://blog.hypriot.com/images/kitematic-on-pi/create.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1200&#34;&gt;
      &lt;img src=&#34;https://blog.hypriot.com/images/kitematic-on-pi/thumbnails/thumb_create.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;Download and create a Docker Container&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Download and create a Docker Container
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;https://blog.hypriot.com/images/kitematic-on-pi/web-preview.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1200&#34;&gt;
      &lt;img src=&#34;https://blog.hypriot.com/images/kitematic-on-pi/thumbnails/thumb_web-preview.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;A running a container with web preview&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    A running a container with web preview
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;




&lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;https://blog.hypriot.com/images/kitematic-on-pi/thumbs-up.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1600x1200&#34;&gt;
      &lt;img src=&#34;https://blog.hypriot.com/images/kitematic-on-pi/thumbnails/thumb_thumbs-up.jpg&#34; itemprop=&#34;thumbnail&#34; alt=&#34;Thumbs up! All is running well&#34; /&gt;
  &lt;/a&gt;


  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Thumbs up! All is running well
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;Hypriot&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://blog.hypriot.com/css/photoswipe.css&#34;&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://blog.hypriot.com/css/default-skin/default-skin.css&#34;&gt;
&lt;script src=&#34;https://blog.hypriot.com/js/photoswipe.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://blog.hypriot.com/js/photoswipe-ui-default.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://blog.hypriot.com/js/initphotoswipe.js&#34;&gt;&lt;/script&gt;



&lt;div class=&#34;pswp&#34; tabindex=&#34;-1&#34; role=&#34;dialog&#34; aria-hidden=&#34;true&#34;&gt;

&lt;div class=&#34;pswp__bg&#34;&gt;&lt;/div&gt;

&lt;div class=&#34;pswp__scroll-wrap&#34;&gt;
    
    &lt;div class=&#34;pswp__container&#34;&gt;
      &lt;div class=&#34;pswp__item&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;pswp__item&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;pswp__item&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    
    &lt;div class=&#34;pswp__ui pswp__ui--hidden&#34;&gt;
    &lt;div class=&#34;pswp__top-bar&#34;&gt;
      
      &lt;div class=&#34;pswp__counter&#34;&gt;&lt;/div&gt;
      &lt;button class=&#34;pswp__button pswp__button--close&#34; title=&#34;Close (Esc)&#34;&gt;&lt;/button&gt;
      &lt;button class=&#34;pswp__button pswp__button--share&#34; title=&#34;Share&#34;&gt;&lt;/button&gt;
      &lt;button class=&#34;pswp__button pswp__button--fs&#34; title=&#34;Toggle fullscreen&#34;&gt;&lt;/button&gt;
      &lt;button class=&#34;pswp__button pswp__button--zoom&#34; title=&#34;Zoom in/out&#34;&gt;&lt;/button&gt;
      
      
      &lt;div class=&#34;pswp__preloader&#34;&gt;
        &lt;div class=&#34;pswp__preloader__icn&#34;&gt;
          &lt;div class=&#34;pswp__preloader__cut&#34;&gt;
            &lt;div class=&#34;pswp__preloader__donut&#34;&gt;&lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;pswp__share-modal pswp__share-modal--hidden pswp__single-tap&#34;&gt;
      &lt;div class=&#34;pswp__share-tooltip&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;button class=&#34;pswp__button pswp__button--arrow--left&#34; title=&#34;Previous (arrow left)&#34;&gt;
    &lt;/button&gt;
    &lt;button class=&#34;pswp__button pswp__button--arrow--right&#34; title=&#34;Next (arrow right)&#34;&gt;
    &lt;/button&gt;
    &lt;div class=&#34;pswp__caption&#34;&gt;
      &lt;div class=&#34;pswp__caption__center&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;style&gt;
    .gallery {  }
    .gallery img { width: 100%; height: auto; }
    .gallery figure { display: block; float: left; margin: 0 5px 5px 0; width: 200px; }
    .gallery figcaption { display: none; }
    .gallery div.title { font-weight: bold; }
    span[itemprop=&#34;copyrightHolder&#34;] { color : #888; float: right; }
    span[itemprop=&#34;copyrightHolder&#34;]:before { content: &#34;Foto: &#34;; }
    img[itemprop=&#34;thumbnail&#34;]{ width: 200px; }
&lt;/style&gt;


&lt;script&gt;initPhotoSwipeFromDOM(&#39;.gallery&#39;);&lt;/script&gt;
&lt;/p&gt;

&lt;p&gt;You can find the &lt;code&gt;Dockerfile&lt;/code&gt; in a new GitHub repo at &lt;a href=&#34;https://github.com/hypriot/rpi-kitematic&#34;&gt;hypriot/rpi-kitematic&lt;/a&gt;. If you like you can follow along and try it out with your own display.&lt;/p&gt;

&lt;p&gt;We made a small video to demonstrate how Kitematic looks and feels controlling your containers with a touch display:&lt;/p&gt;

&lt;div class=&#34;video-container&#34;&gt;&lt;iframe src=&#34;https://www.youtube.com/embed/HVyQeCqE_4A&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;As you can see this is still a work-in-progress. But we believe we can make it available soon in an easy and convenient way to be used by everyone.&lt;/p&gt;

&lt;p&gt;If you are one of the lucky owners of the new Raspberry 7&amp;rdquo; touch screen display, you may wanna try out the following steps to run it on your own Pi as well.&lt;/p&gt;

&lt;p&gt;First log in to your Raspberry Pi and install X11. We have created a small helper script that installs everything you need.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -sSL https://github.com/hypriot/x11-on-HypriotOS/raw/master/install-x11-basics.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you have to enable the X11 server to listen on a TCP socket (port 6000). Just insert the line &lt;code&gt;xserver-allow-tcp=true&lt;/code&gt; in the file &lt;code&gt;/etc/lightdm/lightdm.conf&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;xserver-allow-tcp=true&amp;quot; &amp;gt;&amp;gt; /etc/lightdm/lightdm.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next you have to enable X11 server to accept external TCP access from inside of a Docker container.
This is a network connection coming from another TCP/IP address because the container is running in it&amp;rsquo;s own network name space.&lt;/p&gt;

&lt;p&gt;If you want to automate this step, you can add a start script so the TCP connections are allowed after the next reboot.
If you want to do it manually, just skip this step.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;xhost +&amp;quot; &amp;gt; /etc/X11/Xsession.d/36x11-xhost-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To fix the orientation of the 7&amp;rdquo; touch display we have to add &lt;code&gt;lcd_rotate=2&lt;/code&gt; into the &lt;code&gt;/boot/config.txt&lt;/code&gt;. If you just use an HDMI monitor you should skip this step.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;lcd_rotate=2&amp;quot; &amp;gt;&amp;gt; /boot/config.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now reboot your Pi to start the X11 server on your 7&amp;rdquo; touch display or HDMI monitor.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you haven&amp;rsquo;t enabled the TCP connection yet, run the following command to enable it now.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DISPLAY=:0.0 xhost +
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If it works you see a message like &lt;code&gt;access control disabled, clients can connect from any host&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now you have to build the Kitematic container.
We haven&amp;rsquo;t uploaded it to the Docker Hub yet as it is still a work-in-progress.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/hypriot/rpi-kitematic
cd rpi-kitematic
docker build -t hypriot/rpi-kitematic .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now it&amp;rsquo;s time to run the Kitematic container with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --privileged -v /var/run/docker.sock:/var/run/docker.sock -e DISPLAY=172.17.42.1:0.0 hypriot/rpi-kitematic
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The container runs Kitematic in development mode. Because of this the first start-up may take some minutes until the user interface finally shows up.
But once it is started, it feels pretty smooth to use.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this demonstration. We currently think of how to best deploy Kitematic for the Pi - whether we should run it in a container or natively on the host.
But running a GUI application in a Docker container was something we wanted to try out anyhow. :)&lt;/p&gt;

&lt;p&gt;What do you think would be the best approach? How should we provide Kitematic on a Raspberry Pi without putting to much bloat into our SD card image by default?&lt;/p&gt;

&lt;p&gt;As always use the comments below to give us feedback and share it on Twitter or Facebook.
You also might wanna discuss this article on &lt;a href=&#34;https://news.ycombinator.com/item?id=10374271&#34;&gt;HackerNews&lt;/a&gt; or vote it up if you find it interesting.&lt;/p&gt;

&lt;p&gt;Stefan&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kitematic meets Windows Docker</title>
      <link>https://blog.hypriot.com/post/kitematic-meets-windows-docker/</link>
      <pubDate>Wed, 09 Sep 2015 00:07:37 +0200</pubDate>
      
      <guid>https://blog.hypriot.com/post/kitematic-meets-windows-docker/</guid>
      <description>&lt;p&gt;I just want to share some screenshots with you. Today I have played with Kitematic on a Windows Server 2016 TP3 and made it talk to the Windows Docker Engine. Yes, no VirtualBox in between. Just starting native Windows Containers from the Kitematic interface.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.hypriot.com/images/kitematic-meets-windows-docker/kitematic-win2016tp3.png-shadow.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;A closer look at the left column shows a running &lt;strong&gt;mongo&lt;/strong&gt; container. Yes, I know, you cannot pull docker images with the Windows Docker Engine at the moment. But I have built a mongo Docker image for Windows with this &lt;a href=&#34;https://github.com/StefanScherer/dockerfiles-windows/blob/master/mongo/3.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; and created the container by pressing the &lt;strong&gt;Create&lt;/strong&gt; button in the Kitematic UI.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.hypriot.com/images/kitematic-meets-windows-docker/kitematic-mongo.png-shadow.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;And to show that this is no fake you can see some windows paths in the container logs view:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.hypriot.com/images/kitematic-meets-windows-docker/kitematic-list.png-shadow.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s all for now.&lt;/p&gt;

&lt;p&gt;As always use the comments below to give us feedback and share it on Twitter or Facebook.&lt;/p&gt;

&lt;p&gt;Stefan&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Connecting Kitematic to an external Docker Engine running on a Raspberry Pi</title>
      <link>https://blog.hypriot.com/post/connect-kitematic-to-external-docker-engine/</link>
      <pubDate>Wed, 15 Apr 2015 06:35:55 +0200</pubDate>
      
      <guid>https://blog.hypriot.com/post/connect-kitematic-to-external-docker-engine/</guid>
      <description>

&lt;p&gt;In this post we show you the first steps how easy it is using Kitematic to control a Docker engine running on a Raspberry Pi. Finally we demostrate in a small screencast how to run an unbelievable amount of 101 web servers on a single Raspberry Pi 2.&lt;/p&gt;

&lt;h3 id=&#34;intro-and-background:90fd682791be4b8b148459904d1205f8&#34;&gt;Intro and Background&lt;/h3&gt;

&lt;p&gt;At Hypriot we recently built and released our own OS image to run the Docker Engine on a low-cost Raspberry Pi and labeled it HypriotOS.  A user can download this pre-compiled Raspbian based SD card image, which includes a Linux 3.18.10 kernel with all Docker related kernel options included, and Docker 1.5.0 is already enabled with Overlay filesystem.  Just download, extract, flash to a SD card and boot your Raspberry Pi - and within minutes you have Docker up and running and you can instantly start using it.&lt;/p&gt;

&lt;p&gt;You can read more details and find the download links in our blog post &lt;a href=&#34;https://blog.hypriot.com/heavily-armed-after-major-upgrade-raspberry-pi-with-docker-1-dot-5-0&#34;&gt;Heavily ARMed after major upgrade: Raspberry Pi with Docker 1.5.0&lt;/a&gt; and recently updated post &lt;a href=&#34;https://blog.hypriot.com/post/hypriotos-back-again-with-docker-on-arm/&#34;&gt;HypriotOS: Back Again and Better then Ever&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As developers and geeks, we&amp;rsquo;re really comfortable using SSH and a bash shell to control the Docker CLI.  It&amp;rsquo;s also not a problem to connect a Linux or Mac OSX host via a native Docker CLI over the network, even a Windows client works well.  But what about the normal end users?  Wouldn&amp;rsquo;t it be great to have a more convinient way to use a graphical frontend via web or a specific app.  A GUI would be really cool, but this would take a long time to develop.&lt;/p&gt;

&lt;h3 id=&#34;kitematic-to-the-rescue:90fd682791be4b8b148459904d1205f8&#34;&gt;Kitematic to the Rescue&lt;/h3&gt;

&lt;p&gt;Even the fact that our OS image works pretty much out of the box, and everybody can use Docker within minutes we&amp;rsquo;ve received a lot of feedback, whether we could build and deliver a graphical application to control Docker and deploying apps/containers with it.  And here comes Kitematic to the rescue - what a great timing.  We&amp;rsquo;ve just read the announcement on the Docker blog and were extremely impressed but also a little bit frustrated, it&amp;rsquo;s only meant to be used on a Mac running it&amp;rsquo;s own Boot2Docker VM through a newly created Docker Machine.&lt;/p&gt;

&lt;p&gt;We were fascinated immediately about the simplicity and the seamless GUI, instantly installing Kitematic on a MacBookPro and it was running within 10 minutes only.  Really impressed and hooked!  Another 15 minutes later, we had cloned the source code repo from GitHub, then a &amp;ldquo;npm install&amp;rdquo; and a &amp;ldquo;npm start&amp;rdquo; and WOW, we&amp;rsquo;re running our personal dev version!  And we even were able to create our own Mac App with a &amp;ldquo;npm run release&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Imagine now what could be even better for an end user?  What if we could use Kitematic to control a remote Docker Host running on that cute little Raspberry Pi.&lt;/p&gt;

&lt;h3 id=&#34;connecting-the-dots:90fd682791be4b8b148459904d1205f8&#34;&gt;Connecting the Dots&lt;/h3&gt;

&lt;p&gt;We quickly read through the docs and studied the source code and found out that Kitematic is based upon Docker Machine to control the backend Docker Host, hey cool - that&amp;rsquo;s the key.  Within a couple of hours we had the first rough hack and were able to actively control a Raspberry Pi 2 running Docker 1.5.0 with a brand new graphical user interface.  Just selecting one of our favorite Docker Images from the Docker Hub and pushed it seamlessly to a RPi!&lt;br /&gt;
&lt;img src=&#34;https://blog.hypriot.com/images/kitematic/rpi-docker-images-at-the-hub.png&#34; alt=&#34;image1&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;But until now, it was just a hack and far away from being used in production or by end users.  All settings were done with some source code changes within Kitematic itself.&lt;/p&gt;

&lt;p&gt;Here are the details of that quick hack.  You only have to change these three lines in &lt;code&gt;src/Docker.js&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;16:      protocol: &#39;http&#39;,
17:      host: 192.168.2.114,
18:      port: 2375,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just use an unencrypted connection for the first step, change the protocol from &lt;code&gt;https&lt;/code&gt; to &lt;code&gt;http&lt;/code&gt;, use the IP address of the Raspberry Pi, and don&amp;rsquo;t forget to change the port number to &lt;code&gt;2375&lt;/code&gt;.  With the last change, Kitematic don&amp;rsquo;t use any cert or key file to connect to the remote Docker Host.&lt;/p&gt;

&lt;p&gt;For the next day we scheduled a short online meeting with Mike from Kitematic, and to our surprise the whole team joined us, including Jeff and Sean.  Everybody was so happy and surprised how easy we could merge both ideas and concepts together.  Right now, we&amp;rsquo;re able to offer a Docker optimized OS for the Raspberry Pi which one could install and use within a few minutes only, and within the same amount of time, installing the app from Kitematic to control your Raspberry Pi with a great user experience.&lt;/p&gt;

&lt;h3 id=&#34;switch-to-a-better-system-design:90fd682791be4b8b148459904d1205f8&#34;&gt;Switch to a better System Design&lt;/h3&gt;

&lt;p&gt;Thanks to the fact, that Kitematic uses Docker Machine under the hood to connect to it&amp;rsquo;s Docker VM, it must be able to use this concept for a better system design to communicate with an external Docker Host.  Our first try was just looking for a standard driver available which supports our needs.  We quickly tested the &lt;code&gt;none&lt;/code&gt; driver and were able to control the Raspberry Pi from within Docker Machine.  For this case it was necessary to reconfigure Docker to use a TLS encrypted connection.  But we had absolute no luck to get it work together with Kitematic.&lt;/p&gt;

&lt;p&gt;Ok, let&amp;rsquo;s dig deeper and just use the Docker Machine GitHub repo to get familiar with the driver concept.  And learn what has to be done, to build your own Docker Machine Driver specifically for connecting a Docker Engine running on an external Linux machine.  Within a day only, we got it working, our very first driver implementation for Docker Machine.  Our goal was to keep it super-simple and ready-to-use together with Kitematic, and hopefully don&amp;rsquo;t change anything within the app&amp;rsquo;s source code.&lt;/p&gt;

&lt;p&gt;All changes are already documented in a few pull-requests which are available for further improvement and testing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hypriot/kitematic/pull/1&#34;&gt;hypriot/kitematic#1, Connect to externel docker host through docker-machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hypriot/machine/pull/1&#34;&gt;hypriot/machine#1, Add driver &amp;lsquo;hypriot&amp;rsquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To use this improved Kitematic version from Hypriot, you have to clone the GitHub repo &lt;a href=&#34;https://github.com/hypriot/kitematic/tree/connect-to-externel-docker-host&#34;&gt;hypriot/kitematic&lt;/a&gt;, use the branch &lt;code&gt;connect-to-externel-docker-host&lt;/code&gt; and build it with &amp;ldquo;npm run install&amp;rdquo;, it will also download and use our specifically built version of Docker Machine with the &lt;code&gt;hypriot&lt;/code&gt; driver included.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.hypriot.com/images/kitematic/Kitematic-and-HypriotOS-just-works.png&#34; alt=&#34;image2&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;mission-accomplished:90fd682791be4b8b148459904d1205f8&#34;&gt;Mission accomplished&lt;/h3&gt;

&lt;p&gt;At the end, we&amp;rsquo;ve now built our own basic Docker Machine driver for the HypriotOS to use it for controlling a Raspberry Pi with the Kitematic app, and we&amp;rsquo;ll improve it over the next few days and weeks to get it production ready.  To our surprise, we only had to change a single line of code within Kitematic itself.&lt;/p&gt;

&lt;p&gt;Here is a short 4 minute screencast to demonstrate the running system as &lt;a href=&#34;https://www.youtube.com/watch?v=yHytb1k3TfM&#34;&gt;Docker Kitematic controls Raspberry Pi 2 running Docker 1.5.0&lt;/a&gt;. Watch out the number of web servers we started simultaneously on the Raspberry Pi 2, all as separate Docker containers. Can you imagine how cool this Linux container technology from Docker is, even on such a small device?&lt;/p&gt;

&lt;p&gt;And the best thing is, it could be used to connect any other external Docker Host to Kitematic, not only the Raspberry Pi.  In the PR we included a short description how to connect an already running Boot2Docker VM to Kitematic.  And if anyone is interested to help, please feel free to join.  As soon as we&amp;rsquo;re done with the development we&amp;rsquo;ll create an upstream PR to get the changes back into Kitematic and Docker Machine.&lt;/p&gt;

&lt;h3 id=&#34;next-steps:90fd682791be4b8b148459904d1205f8&#34;&gt;Next Steps&lt;/h3&gt;

&lt;p&gt;We do have a lot of things on our roadmap, maybe too much to share in this blog post.  Here are at least the next important things we&amp;rsquo;re planing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;new Linux kernel 3.18.10 (DONE)&lt;/li&gt;
&lt;li&gt;support for Open vSwitch (we&amp;rsquo;d love to use SocketPlane on the RPi) (DONE)

&lt;ul&gt;
&lt;li&gt;include kernel options for Open vSwitch (DONE)&lt;/li&gt;
&lt;li&gt;natively compiled packages for Open vSwitch (DONE)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;support for Docker Machine (WIP)

&lt;ul&gt;
&lt;li&gt;production ready driver for HypriotOS and the Raspberry Pi&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;support for Docker Compose (WIP)&lt;/li&gt;
&lt;li&gt;support for Docker Swarm (WIP)&lt;/li&gt;
&lt;li&gt;&amp;hellip; (depending on user feedback)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.hypriot.com/images/kitematic/pi_armed_with_docker.jpg&#34; alt=&#34;image3&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;send-us-your-feedback-please:90fd682791be4b8b148459904d1205f8&#34;&gt;Send us your Feedback, please!&lt;/h3&gt;

&lt;p&gt;We really love feedback and would like to get some new ideas and thoughts from all of you.  So, if you&amp;rsquo;re liking our ideas and the way to find and break the limits, please send us your comments via email, twitter or drop us a line.  We&amp;rsquo;d be more than happy to answer and talk directly to share our experiences.&lt;/p&gt;

&lt;h4 id=&#34;note:90fd682791be4b8b148459904d1205f8&#34;&gt;Note&lt;/h4&gt;

&lt;p&gt;This post was originally posted at the &lt;a href=&#34;http://blog.kitematic.com&#34;&gt;Kitematic Blog&lt;/a&gt;, and is slightly updated to recent download links and version numbers.&lt;/p&gt;

&lt;p&gt;&amp;ndash;
Dieter Reuter&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>